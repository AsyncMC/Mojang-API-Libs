package org.openapitools.api;

import org.openapitools.model.Error;
import java.util.List;
import org.openapitools.model.SecurityAnswer;
import org.openapitools.model.SecurityChallenge;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;
import javax.ws.rs.*;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.MediaType;
import org.apache.cxf.jaxrs.ext.multipart.*;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.ApiResponse;
import io.swagger.jaxrs.PATCH;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Mojang API
 *
 * <p>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 */
@Path("/")
@Api(value = "/", description = "")
public interface SecurityQuestionAnswerApi  {

    /**
     * Check if security questions are needed
     *
     */
    @GET
    @Path("/user/security/location")
    @Produces({ "application/json" })
    @ApiOperation(value = "Check if security questions are needed", tags={ "Security question-answer",  })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No check is needed."),
        @ApiResponse(code = 400, message = "A security check is needed or there is an other issue", response = Error.class) })
    public void checkSecurityStatus();

    /**
     * Get list of questions
     *
     */
    @GET
    @Path("/user/security/challenges")
    @Produces({ "application/json" })
    @ApiOperation(value = "Get list of questions", tags={ "Security question-answer",  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A list of security questions to be answered", response = SecurityChallenge.class, responseContainer = "List") })
    public List<SecurityChallenge> listPendingSecurityQuestions();

    /**
     * Send back the answers
     *
     */
    @POST
    @Path("/user/security/location")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    @ApiOperation(value = "Send back the answers", tags={ "Security question-answer" })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "The answers were accepted"),
        @ApiResponse(code = 400, message = "At least one answer we not accepted", response = Error.class) })
    public void sendSecurityQuestionAnswers(@Valid List<SecurityAnswer> securityAnswer);
}

