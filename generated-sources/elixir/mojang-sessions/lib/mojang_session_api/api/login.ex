# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule MojangSessionAPI.Api.Login do
  @moduledoc """
  API calls for all endpoints tagged `Login`.
  """

  alias MojangSessionAPI.Connection
  import MojangSessionAPI.RequestBuilder


  @doc """
  Gets the player&#39;s game profile
  This will return the player&#39;s username plus any additional information about them (e.g. skins). This has a much stricter rate limit: You can request the same profile once per minute, however you can send as many unique requests as you like.

  ## Parameters

  - connection (MojangSessionAPI.Connection): Connection to server
  - stripped_uuid (String.t): The player UUID without hyphens
  - opts (KeywordList): [optional] Optional parameters
    - :unsigned (boolean()): When set to false, the signature data are sent
  ## Returns

  {:ok, %MojangSessionAPI.Model.PlayerProfile{}} on success
  {:error, info} on failure
  """
  @spec get_player_profile(Tesla.Env.client, String.t, keyword()) :: {:ok, MojangSessionAPI.Model.PlayerProfile.t} | {:error, Tesla.Env.t}
  def get_player_profile(connection, stripped_uuid, opts \\ []) do
    optional_params = %{
      :"unsigned" => :query
    }
    %{}
    |> method(:get)
    |> url("/session/minecraft/profile/#{stripped_uuid}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%MojangSessionAPI.Model.PlayerProfile{})
  end
end
