/* 
 * Mojang API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Error : This is returned when the request fails

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Error {
  #[serde(rename = "error")]
  error: Option<String>,
  #[serde(rename = "errorMessage")]
  error_message: Option<String>
}

impl Error {
  /// This is returned when the request fails
  pub fn new() -> Error {
    Error {
      error: None,
      error_message: None
    }
  }

  pub fn set_error(&mut self, error: String) {
    self.error = Some(error);
  }

  pub fn with_error(mut self, error: String) -> Error {
    self.error = Some(error);
    self
  }

  pub fn error(&self) -> Option<&String> {
    self.error.as_ref()
  }

  pub fn reset_error(&mut self) {
    self.error = None;
  }

  pub fn set_error_message(&mut self, error_message: String) {
    self.error_message = Some(error_message);
  }

  pub fn with_error_message(mut self, error_message: String) -> Error {
    self.error_message = Some(error_message);
    self
  }

  pub fn error_message(&self) -> Option<&String> {
    self.error_message.as_ref()
  }

  pub fn reset_error_message(&mut self) {
    self.error_message = None;
  }

}



