/* 
 * Mojang API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct UploadSkinRequest {
  #[serde(rename = "model")]
  model: Option<::models::SkinModel>,
  /// The skin image in PNG format
  #[serde(rename = "file")]
  file: ::models::File
}

impl UploadSkinRequest {
  pub fn new(file: ::models::File) -> UploadSkinRequest {
    UploadSkinRequest {
      model: None,
      file: file
    }
  }

  pub fn set_model(&mut self, model: ::models::SkinModel) {
    self.model = Some(model);
  }

  pub fn with_model(mut self, model: ::models::SkinModel) -> UploadSkinRequest {
    self.model = Some(model);
    self
  }

  pub fn model(&self) -> Option<&::models::SkinModel> {
    self.model.as_ref()
  }

  pub fn reset_model(&mut self) {
    self.model = None;
  }

  pub fn set_file(&mut self, file: ::models::File) {
    self.file = file;
  }

  pub fn with_file(mut self, file: ::models::File) -> UploadSkinRequest {
    self.file = file;
    self
  }

  pub fn file(&self) -> &::models::File {
    &self.file
  }


}



