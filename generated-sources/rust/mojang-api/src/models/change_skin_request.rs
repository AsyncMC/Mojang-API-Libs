/* 
 * Mojang API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ChangeSkinRequest : Request Mojang to download a skin from an URL and apply to the player

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ChangeSkinRequest {
  #[serde(rename = "model")]
  model: Option<::models::SkinModel>,
  /// The URL which Mojang servers will download and apply the skin
  #[serde(rename = "url")]
  url: String
}

impl ChangeSkinRequest {
  /// Request Mojang to download a skin from an URL and apply to the player
  pub fn new(url: String) -> ChangeSkinRequest {
    ChangeSkinRequest {
      model: None,
      url: url
    }
  }

  pub fn set_model(&mut self, model: ::models::SkinModel) {
    self.model = Some(model);
  }

  pub fn with_model(mut self, model: ::models::SkinModel) -> ChangeSkinRequest {
    self.model = Some(model);
    self
  }

  pub fn model(&self) -> Option<&::models::SkinModel> {
    self.model.as_ref()
  }

  pub fn reset_model(&mut self) {
    self.model = None;
  }

  pub fn set_url(&mut self, url: String) {
    self.url = url;
  }

  pub fn with_url(mut self, url: String) -> ChangeSkinRequest {
    self.url = url;
    self
  }

  pub fn url(&self) -> &String {
    &self.url
  }


}



