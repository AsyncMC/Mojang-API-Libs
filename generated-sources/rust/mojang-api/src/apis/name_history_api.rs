/* 
 * Mojang API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 * Generated by: https://openapi-generator.tech
 */

use std::rc::Rc;
use std::borrow::Borrow;

use hyper;
use serde_json;
use futures::Future;

use super::{Error, configuration};
use super::request as __internal_request;

pub struct NameHistoryApiClient<C: hyper::client::Connect> {
    configuration: Rc<configuration::Configuration<C>>,
}

impl<C: hyper::client::Connect> NameHistoryApiClient<C> {
    pub fn new(configuration: Rc<configuration::Configuration<C>>) -> NameHistoryApiClient<C> {
        NameHistoryApiClient {
            configuration: configuration,
        }
    }
}

pub trait NameHistoryApi {
    fn find_unique_ids_by_name(&self, request_body: Vec<String>) -> Box<Future<Item = Vec<::models::CurrentPlayerIDs>, Error = Error<serde_json::Value>>>;
    fn get_name_history(&self, stripped_uuid: &str) -> Box<Future<Item = Vec<::models::NameChange>, Error = Error<serde_json::Value>>>;
    fn get_unique_id_by_name(&self, username: &str, at: i64) -> Box<Future<Item = ::models::CurrentPlayerIDs, Error = Error<serde_json::Value>>>;
}


impl<C: hyper::client::Connect>NameHistoryApi for NameHistoryApiClient<C> {
    fn find_unique_ids_by_name(&self, request_body: Vec<String>) -> Box<Future<Item = Vec<::models::CurrentPlayerIDs>, Error = Error<serde_json::Value>>> {
        __internal_request::Request::new(hyper::Method::Post, "/profiles/minecraft".to_string())
            .with_body_param(request_body)
            .execute(self.configuration.borrow())
    }

    fn get_name_history(&self, stripped_uuid: &str) -> Box<Future<Item = Vec<::models::NameChange>, Error = Error<serde_json::Value>>> {
        __internal_request::Request::new(hyper::Method::Get, "/user/profiles/{stripped_uuid}/names".to_string())
            .with_path_param("stripped_uuid".to_string(), stripped_uuid.to_string())
            .execute(self.configuration.borrow())
    }

    fn get_unique_id_by_name(&self, username: &str, at: i64) -> Box<Future<Item = ::models::CurrentPlayerIDs, Error = Error<serde_json::Value>>> {
        __internal_request::Request::new(hyper::Method::Get, "/users/profiles/minecraft/{username}".to_string())
            .with_query_param("at".to_string(), at.to_string())
            .with_path_param("username".to_string(), username.to_string())
            .execute(self.configuration.borrow())
    }

}
