/* 
 * Mojang Authentication API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 * Generated by: https://openapi-generator.tech
 */

use std::rc::Rc;
use std::borrow::Borrow;

use hyper;
use serde_json;
use futures::Future;

use super::{Error, configuration};
use super::request as __internal_request;

pub struct DefaultApiClient<C: hyper::client::Connect> {
    configuration: Rc<configuration::Configuration<C>>,
}

impl<C: hyper::client::Connect> DefaultApiClient<C> {
    pub fn new(configuration: Rc<configuration::Configuration<C>>) -> DefaultApiClient<C> {
        DefaultApiClient {
            configuration: configuration,
        }
    }
}

pub trait DefaultApi {
    fn authenticate(&self, authentication_request: ::models::AuthenticationRequest) -> Box<Future<Item = ::models::Authentication, Error = Error<serde_json::Value>>>;
    fn invalidate(&self, access_keys: ::models::AccessKeys) -> Box<Future<Item = (), Error = Error<serde_json::Value>>>;
    fn refresh(&self, refresh_request: ::models::RefreshRequest) -> Box<Future<Item = ::models::RefreshResponse, Error = Error<serde_json::Value>>>;
    fn siginout(&self, username_password: ::models::UsernamePassword) -> Box<Future<Item = (), Error = Error<serde_json::Value>>>;
    fn validate(&self, access_keys: ::models::AccessKeys) -> Box<Future<Item = (), Error = Error<serde_json::Value>>>;
}


impl<C: hyper::client::Connect>DefaultApi for DefaultApiClient<C> {
    fn authenticate(&self, authentication_request: ::models::AuthenticationRequest) -> Box<Future<Item = ::models::Authentication, Error = Error<serde_json::Value>>> {
        __internal_request::Request::new(hyper::Method::Post, "/authenticate".to_string())
            .with_body_param(authentication_request)
            .execute(self.configuration.borrow())
    }

    fn invalidate(&self, access_keys: ::models::AccessKeys) -> Box<Future<Item = (), Error = Error<serde_json::Value>>> {
        __internal_request::Request::new(hyper::Method::Post, "/invalidate".to_string())
            .with_body_param(access_keys)
            .returns_nothing()
            .execute(self.configuration.borrow())
    }

    fn refresh(&self, refresh_request: ::models::RefreshRequest) -> Box<Future<Item = ::models::RefreshResponse, Error = Error<serde_json::Value>>> {
        __internal_request::Request::new(hyper::Method::Post, "/refresh".to_string())
            .with_body_param(refresh_request)
            .execute(self.configuration.borrow())
    }

    fn siginout(&self, username_password: ::models::UsernamePassword) -> Box<Future<Item = (), Error = Error<serde_json::Value>>> {
        __internal_request::Request::new(hyper::Method::Post, "/signout".to_string())
            .with_body_param(username_password)
            .returns_nothing()
            .execute(self.configuration.borrow())
    }

    fn validate(&self, access_keys: ::models::AccessKeys) -> Box<Future<Item = (), Error = Error<serde_json::Value>>> {
        __internal_request::Request::new(hyper::Method::Post, "/validate".to_string())
            .with_body_param(access_keys)
            .returns_nothing()
            .execute(self.configuration.borrow())
    }

}
