# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class OrderStatisticsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metric_keys=None):  # noqa: E501
        """OrderStatisticsRequest - a model defined in OpenAPI

        :param metric_keys: The metric_keys of this OrderStatisticsRequest.  # noqa: E501
        :type metric_keys: List[OrderStatistic]
        """
        self.openapi_types = {
            'metric_keys': List[OrderStatistic]
        }

        self.attribute_map = {
            'metric_keys': 'metricKeys'
        }

        self._metric_keys = metric_keys

    @classmethod
    def from_dict(cls, dikt) -> 'OrderStatisticsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OrderStatisticsRequest of this OrderStatisticsRequest.  # noqa: E501
        :rtype: OrderStatisticsRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metric_keys(self):
        """Gets the metric_keys of this OrderStatisticsRequest.


        :return: The metric_keys of this OrderStatisticsRequest.
        :rtype: List[OrderStatistic]
        """
        return self._metric_keys

    @metric_keys.setter
    def metric_keys(self, metric_keys):
        """Sets the metric_keys of this OrderStatisticsRequest.


        :param metric_keys: The metric_keys of this OrderStatisticsRequest.
        :type metric_keys: List[OrderStatistic]
        """
        if metric_keys is None:
            raise ValueError("Invalid value for `metric_keys`, must not be `None`")  # noqa: E501

        self._metric_keys = metric_keys
