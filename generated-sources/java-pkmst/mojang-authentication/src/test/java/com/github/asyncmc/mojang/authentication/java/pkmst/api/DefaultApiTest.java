/*
 * Mojang Authentication API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.asyncmc.mojang.authentication.java.pkmst.api;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.github.asyncmc.mojang.authentication.java.pkmst.model.AccessKeys;
import com.github.asyncmc.mojang.authentication.java.pkmst.model.Authentication;
import com.github.asyncmc.mojang.authentication.java.pkmst.model.AuthenticationRequest;
import com.github.asyncmc.mojang.authentication.java.pkmst.model.Error;
import com.github.asyncmc.mojang.authentication.java.pkmst.model.RefreshRequest;
import com.github.asyncmc.mojang.authentication.java.pkmst.model.RefreshResponse;
import com.github.asyncmc.mojang.authentication.java.pkmst.model.UsernamePassword;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.http.ResponseEntity;
import org.springframework.web.multipart.MultipartFile;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final ObjectMapper objectMapper = new ObjectMapper();

    private final DefaultApi api = new DefaultApiController(objectMapper);

    private final String accept = "application/json";

    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void authenticateTest() throws Exception {
        AuthenticationRequest authenticationRequest = null;
    ResponseEntity<Authentication> response = api.authenticate(authenticationRequest , accept);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void invalidateTest() throws Exception {
        AccessKeys accessKeys = null;
    ResponseEntity<Void> response = api.invalidate(accessKeys , accept);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void refreshTest() throws Exception {
        RefreshRequest refreshRequest = null;
    ResponseEntity<RefreshResponse> response = api.refresh(refreshRequest , accept);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void siginoutTest() throws Exception {
        UsernamePassword usernamePassword = null;
    ResponseEntity<Void> response = api.siginout(usernamePassword , accept);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void validateTest() throws Exception {
        AccessKeys accessKeys = null;
    ResponseEntity<Void> response = api.validate(accessKeys , accept);

        // TODO: test validations
    }
    
}
