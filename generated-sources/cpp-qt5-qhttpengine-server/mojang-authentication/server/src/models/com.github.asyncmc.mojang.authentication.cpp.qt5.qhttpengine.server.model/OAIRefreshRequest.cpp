/**
 * Mojang Authentication API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIRefreshRequest.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIRefreshRequest::OAIRefreshRequest(QString json) {
    this->fromJson(json);
}

OAIRefreshRequest::OAIRefreshRequest() {
    this->init();
}

OAIRefreshRequest::~OAIRefreshRequest() {

}

void
OAIRefreshRequest::init() {
    m_access_token_isSet = false;
    m_client_token_isSet = false;
}

void
OAIRefreshRequest::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIRefreshRequest::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(access_token, json[QString("accessToken")]);
    
    ::OpenAPI::fromJsonValue(client_token, json[QString("clientToken")]);
    
}

QString
OAIRefreshRequest::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIRefreshRequest::asJsonObject() const {
    QJsonObject obj;
	if(m_access_token_isSet){
        obj.insert(QString("accessToken"), ::OpenAPI::toJsonValue(access_token));
    }
	if(m_client_token_isSet){
        obj.insert(QString("clientToken"), ::OpenAPI::toJsonValue(client_token));
    }
    return obj;
}

QString
OAIRefreshRequest::getAccessToken() const {
    return access_token;
}
void
OAIRefreshRequest::setAccessToken(const QString &access_token) {
    this->access_token = access_token;
    this->m_access_token_isSet = true;
}

QString
OAIRefreshRequest::getClientToken() const {
    return client_token;
}
void
OAIRefreshRequest::setClientToken(const QString &client_token) {
    this->client_token = client_token;
    this->m_client_token_isSet = true;
}


bool
OAIRefreshRequest::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(m_access_token_isSet){ isObjectUpdated = true; break;}
    
        if(m_client_token_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

