/**
 * Mojang API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAICurrentPlayerIDs.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAICurrentPlayerIDs::OAICurrentPlayerIDs(QString json) {
    this->fromJson(json);
}

OAICurrentPlayerIDs::OAICurrentPlayerIDs() {
    this->init();
}

OAICurrentPlayerIDs::~OAICurrentPlayerIDs() {

}

void
OAICurrentPlayerIDs::init() {
    m_id_isSet = false;
    m_name_isSet = false;
    m_legacy_isSet = false;
    m_demo_isSet = false;
}

void
OAICurrentPlayerIDs::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAICurrentPlayerIDs::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(id, json[QString("id")]);
    
    ::OpenAPI::fromJsonValue(name, json[QString("name")]);
    
    ::OpenAPI::fromJsonValue(legacy, json[QString("legacy")]);
    
    ::OpenAPI::fromJsonValue(demo, json[QString("demo")]);
    
}

QString
OAICurrentPlayerIDs::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAICurrentPlayerIDs::asJsonObject() const {
    QJsonObject obj;
	if(m_id_isSet){
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(id));
    }
	if(m_name_isSet){
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(name));
    }
	if(m_legacy_isSet){
        obj.insert(QString("legacy"), ::OpenAPI::toJsonValue(legacy));
    }
	if(m_demo_isSet){
        obj.insert(QString("demo"), ::OpenAPI::toJsonValue(demo));
    }
    return obj;
}

QString
OAICurrentPlayerIDs::getId() const {
    return id;
}
void
OAICurrentPlayerIDs::setId(const QString &id) {
    this->id = id;
    this->m_id_isSet = true;
}

QString
OAICurrentPlayerIDs::getName() const {
    return name;
}
void
OAICurrentPlayerIDs::setName(const QString &name) {
    this->name = name;
    this->m_name_isSet = true;
}

bool
OAICurrentPlayerIDs::isLegacy() const {
    return legacy;
}
void
OAICurrentPlayerIDs::setLegacy(const bool &legacy) {
    this->legacy = legacy;
    this->m_legacy_isSet = true;
}

bool
OAICurrentPlayerIDs::isDemo() const {
    return demo;
}
void
OAICurrentPlayerIDs::setDemo(const bool &demo) {
    this->demo = demo;
    this->m_demo_isSet = true;
}


bool
OAICurrentPlayerIDs::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(m_id_isSet){ isObjectUpdated = true; break;}
    
        if(m_name_isSet){ isObjectUpdated = true; break;}
    
        if(m_legacy_isSet){ isObjectUpdated = true; break;}
    
        if(m_demo_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

