/**
 * Mojang API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAISecurityChallenge.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAISecurityChallenge::OAISecurityChallenge(QString json) {
    this->fromJson(json);
}

OAISecurityChallenge::OAISecurityChallenge() {
    this->init();
}

OAISecurityChallenge::~OAISecurityChallenge() {

}

void
OAISecurityChallenge::init() {
    m_question_isSet = false;
    m_answer_isSet = false;
}

void
OAISecurityChallenge::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAISecurityChallenge::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(question, json[QString("question")]);
    
    ::OpenAPI::fromJsonValue(answer, json[QString("answer")]);
    
}

QString
OAISecurityChallenge::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAISecurityChallenge::asJsonObject() const {
    QJsonObject obj;
	if(question.isSet()){
        obj.insert(QString("question"), ::OpenAPI::toJsonValue(question));
    }
	if(answer.isSet()){
        obj.insert(QString("answer"), ::OpenAPI::toJsonValue(answer));
    }
    return obj;
}

OAISecurityQuestion
OAISecurityChallenge::getQuestion() const {
    return question;
}
void
OAISecurityChallenge::setQuestion(const OAISecurityQuestion &question) {
    this->question = question;
    this->m_question_isSet = true;
}

OAISecurityAnswerId
OAISecurityChallenge::getAnswer() const {
    return answer;
}
void
OAISecurityChallenge::setAnswer(const OAISecurityAnswerId &answer) {
    this->answer = answer;
    this->m_answer_isSet = true;
}


bool
OAISecurityChallenge::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(question.isSet()){ isObjectUpdated = true; break;}
    
        if(answer.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

