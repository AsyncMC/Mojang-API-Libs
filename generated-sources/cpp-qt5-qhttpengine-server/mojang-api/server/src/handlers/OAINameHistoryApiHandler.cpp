/**
 * Mojang API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>
#include <QDebug>

#include "OAINameHistoryApiHandler.h"
#include "OAINameHistoryApiRequest.h"

namespace OpenAPI {

OAINameHistoryApiHandler::OAINameHistoryApiHandler(){

}

OAINameHistoryApiHandler::~OAINameHistoryApiHandler(){

}

void OAINameHistoryApiHandler::findUniqueIdsByName(QList<QString> request_body) {
    Q_UNUSED(request_body);
    auto reqObj = qobject_cast<OAINameHistoryApiRequest*>(sender());
    if( reqObj != nullptr ) 
    { 
        QList<OAICurrentPlayerIDs> res;
        reqObj->findUniqueIdsByNameResponse(res);
    }    
}
void OAINameHistoryApiHandler::getNameHistory(QString stripped_uuid) {
    Q_UNUSED(stripped_uuid);
    auto reqObj = qobject_cast<OAINameHistoryApiRequest*>(sender());
    if( reqObj != nullptr ) 
    { 
        QList<OAINameChange> res;
        reqObj->getNameHistoryResponse(res);
    }    
}
void OAINameHistoryApiHandler::getUniqueIdByName(QString username, qint64 at) {
    Q_UNUSED(username);
    Q_UNUSED(at);
    auto reqObj = qobject_cast<OAINameHistoryApiRequest*>(sender());
    if( reqObj != nullptr ) 
    { 
        OAICurrentPlayerIDs res;
        reqObj->getUniqueIdByNameResponse(res);
    }    
}


}
