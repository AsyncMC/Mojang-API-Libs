<?php

/**
 * Mojang Authentication API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class DefaultApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation authenticate
     *
     * .
     *
     *
     * @return Http response
     */
    public function authenticate()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['authentication_request'])) {
            throw new \InvalidArgumentException('Missing the required parameter $authentication_request when calling authenticate');
        }
        $authentication_request = $input['authentication_request'];


        return response('How about implementing authenticate as a post method ?');
    }
    /**
     * Operation invalidate
     *
     * .
     *
     *
     * @return Http response
     */
    public function invalidate()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['access_keys'])) {
            throw new \InvalidArgumentException('Missing the required parameter $access_keys when calling invalidate');
        }
        $access_keys = $input['access_keys'];


        return response('How about implementing invalidate as a post method ?');
    }
    /**
     * Operation refresh
     *
     * .
     *
     *
     * @return Http response
     */
    public function refresh()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['refresh_request'])) {
            throw new \InvalidArgumentException('Missing the required parameter $refresh_request when calling refresh');
        }
        $refresh_request = $input['refresh_request'];


        return response('How about implementing refresh as a post method ?');
    }
    /**
     * Operation siginout
     *
     * .
     *
     *
     * @return Http response
     */
    public function siginout()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['username_password'])) {
            throw new \InvalidArgumentException('Missing the required parameter $username_password when calling siginout');
        }
        $username_password = $input['username_password'];


        return response('How about implementing siginout as a post method ?');
    }
    /**
     * Operation validate
     *
     * .
     *
     *
     * @return Http response
     */
    public function validate()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['access_keys'])) {
            throw new \InvalidArgumentException('Missing the required parameter $access_keys when calling validate');
        }
        $access_keys = $input['access_keys'];


        return response('How about implementing validate as a post method ?');
    }
}
