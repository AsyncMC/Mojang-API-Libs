/**
 * Mojang API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/* tslint:disable:no-unused-variable member-ordering */

import { Observable } from "rxjs/Observable";
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/toPromise';
import IHttpClient from "../IHttpClient";
import { inject, injectable } from "inversify";
import { IAPIConfiguration } from "../IAPIConfiguration";
import { Headers } from "../Headers";
import HttpResponse from "../HttpResponse";

import { ApiStatus } from '../model/apiStatus';

import { COLLECTION_FORMATS }  from '../variables';



@injectable()
export class DefaultService {
    private basePath: string = 'https://status.mojang.com';

    constructor(@inject("IApiHttpClient") private httpClient: IHttpClient,
        @inject("IAPIConfiguration") private APIConfiguration: IAPIConfiguration ) {
        if(this.APIConfiguration.basePath)
            this.basePath = this.APIConfiguration.basePath;
    }

    /**
     * Checks the Mojang service statuses
     * 
     
     */
    public checkStatuses(observe?: 'body', headers?: Headers): Observable<Array<{ [key: string]: ApiStatus; }>>;
    public checkStatuses(observe?: 'response', headers?: Headers): Observable<HttpResponse<Array<{ [key: string]: ApiStatus; }>>>;
    public checkStatuses(observe: any = 'body', headers: Headers = {}): Observable<any> {
        headers['Accept'] = 'application/json';

        const response: Observable<HttpResponse<Array<{ [key: string]: ApiStatus; }>>> = this.httpClient.get(`${this.basePath}/check`, headers);
        if (observe == 'body') {
               return response.map(httpResponse => <Array<{ [key: string]: ApiStatus; }>>(httpResponse.response));
        }
        return response;
    }

}
