note
 description:"[
		Mojang API
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		OpenAPI spec version: 2020-06-05
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORDER_STATISTICS_RESPONSE 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    total: INTEGER_64 
      -- total amount sold
    last24h: INTEGER_64 
      -- total sold in last 24 hours
    sale_velocity_per_seconds: REAL_64 
      -- decimal average sales per second

feature -- Change Element  
 
    set_total (a_name: like total)
        -- Set 'total' with 'a_name'.
      do
        total := a_name
      ensure
        total_set: total = a_name		
      end

    set_last24h (a_name: like last24h)
        -- Set 'last24h' with 'a_name'.
      do
        last24h := a_name
      ensure
        last24h_set: last24h = a_name		
      end

    set_sale_velocity_per_seconds (a_name: like sale_velocity_per_seconds)
        -- Set 'sale_velocity_per_seconds' with 'a_name'.
      do
        sale_velocity_per_seconds := a_name
      ensure
        sale_velocity_per_seconds_set: sale_velocity_per_seconds = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORDER_STATISTICS_RESPONSE%N")
        if attached total as l_total then
          Result.append ("%Ntotal:")
          Result.append (l_total.out)
          Result.append ("%N")    
        end  
        if attached last24h as l_last24h then
          Result.append ("%Nlast24h:")
          Result.append (l_last24h.out)
          Result.append ("%N")    
        end  
        if attached sale_velocity_per_seconds as l_sale_velocity_per_seconds then
          Result.append ("%Nsale_velocity_per_seconds:")
          Result.append (l_sale_velocity_per_seconds.out)
          Result.append ("%N")    
        end  
      end
end


