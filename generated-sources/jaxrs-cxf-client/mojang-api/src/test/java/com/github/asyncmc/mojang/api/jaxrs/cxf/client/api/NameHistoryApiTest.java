/**
 * Mojang API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.github.asyncmc.mojang.api.jaxrs.cxf.client.api;

import com.github.asyncmc.mojang.api.jaxrs.cxf.client.model.CurrentPlayerIDs;
import com.github.asyncmc.mojang.api.jaxrs.cxf.client.model.Error;
import com.github.asyncmc.mojang.api.jaxrs.cxf.client.model.NameChange;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * Mojang API
 *
 * <p>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API tests for NameHistoryApi 
 */
public class NameHistoryApiTest {


    private NameHistoryApi api;
    
    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);
        
        api = JAXRSClientFactory.create("https://api.mojang.com", NameHistoryApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);
        
        ClientConfiguration config = WebClient.getConfig(client); 
    }

    
    /**
     * Find the current UUID of multiple players at once
     *
     * Find the current players name, UUID, demo status and migration flag by the current players name. The \&quot;at\&quot; parameter is not supported. Players not found are not returned. If no players are found, an empty array is returned.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findUniqueIdsByNameTest() {
        List<String> requestBody = null;
        //List<CurrentPlayerIDs> response = api.findUniqueIdsByName(requestBody);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Gets the full player&#39;s name history
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNameHistoryTest() {
        String strippedUuid = null;
        //List<NameChange> response = api.getNameHistory(strippedUuid);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Find the UUID by name
     *
     * Find the current player name, UUID, demo status and migration flag by the current player name or at a given time.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUniqueIdByNameTest() {
        String username = null;
        Long at = null;
        //CurrentPlayerIDs response = api.getUniqueIdByName(username, at);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
}
