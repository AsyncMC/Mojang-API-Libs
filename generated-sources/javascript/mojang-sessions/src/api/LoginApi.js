/**
 * Mojang Session API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PlayerProfile', 'model/SessionApiError'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/PlayerProfile'), require('../model/SessionApiError'));
  } else {
    // Browser globals (root is window)
    if (!root.MojangSessionApi) {
      root.MojangSessionApi = {};
    }
    root.MojangSessionApi.LoginApi = factory(root.MojangSessionApi.ApiClient, root.MojangSessionApi.PlayerProfile, root.MojangSessionApi.SessionApiError);
  }
}(this, function(ApiClient, PlayerProfile, SessionApiError) {
  'use strict';

  /**
   * Login service.
   * @module api/LoginApi
   * @version 2020-06-05
   */

  /**
   * Constructs a new LoginApi. 
   * @alias module:api/LoginApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getPlayerProfile operation.
     * @callback module:api/LoginApi~getPlayerProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PlayerProfile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the player&#39;s game profile
     * This will return the player&#39;s username plus any additional information about them (e.g. skins). This has a much stricter rate limit: You can request the same profile once per minute, however you can send as many unique requests as you like.
     * @param {String} strippedUuid The player UUID without hyphens
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.unsigned When set to false, the signature data are sent
     * @param {module:api/LoginApi~getPlayerProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PlayerProfile}
     */
    this.getPlayerProfile = function(strippedUuid, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'strippedUuid' is set
      if (strippedUuid === undefined || strippedUuid === null) {
        throw new Error("Missing the required parameter 'strippedUuid' when calling getPlayerProfile");
      }


      var pathParams = {
        'stripped_uuid': strippedUuid
      };
      var queryParams = {
        'unsigned': opts['unsigned'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = PlayerProfile;

      return this.apiClient.callApi(
        '/session/minecraft/profile/{stripped_uuid}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
