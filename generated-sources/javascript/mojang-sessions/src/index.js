/**
 * Mojang Session API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PlayerProfile', 'model/PlayerProfileProperty', 'model/PlayerProfileTexturePropertyValue', 'model/PlayerSkinMetadata', 'model/PlayerSkinURL', 'model/PlayerTexture', 'model/PlayerTextureURL', 'model/SessionApiError', 'api/BansApi', 'api/LoginApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/PlayerProfile'), require('./model/PlayerProfileProperty'), require('./model/PlayerProfileTexturePropertyValue'), require('./model/PlayerSkinMetadata'), require('./model/PlayerSkinURL'), require('./model/PlayerTexture'), require('./model/PlayerTextureURL'), require('./model/SessionApiError'), require('./api/BansApi'), require('./api/LoginApi'));
  }
}(function(ApiClient, PlayerProfile, PlayerProfileProperty, PlayerProfileTexturePropertyValue, PlayerSkinMetadata, PlayerSkinURL, PlayerTexture, PlayerTextureURL, SessionApiError, BansApi, LoginApi) {
  'use strict';

  /**
   * JS API client generated by OpenAPI Generator.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var MojangSessionApi = require('index'); // See note below*.
   * var xxxSvc = new MojangSessionApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new MojangSessionApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new MojangSessionApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new MojangSessionApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 2020-06-05
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The PlayerProfile model constructor.
     * @property {module:model/PlayerProfile}
     */
    PlayerProfile: PlayerProfile,
    /**
     * The PlayerProfileProperty model constructor.
     * @property {module:model/PlayerProfileProperty}
     */
    PlayerProfileProperty: PlayerProfileProperty,
    /**
     * The PlayerProfileTexturePropertyValue model constructor.
     * @property {module:model/PlayerProfileTexturePropertyValue}
     */
    PlayerProfileTexturePropertyValue: PlayerProfileTexturePropertyValue,
    /**
     * The PlayerSkinMetadata model constructor.
     * @property {module:model/PlayerSkinMetadata}
     */
    PlayerSkinMetadata: PlayerSkinMetadata,
    /**
     * The PlayerSkinURL model constructor.
     * @property {module:model/PlayerSkinURL}
     */
    PlayerSkinURL: PlayerSkinURL,
    /**
     * The PlayerTexture model constructor.
     * @property {module:model/PlayerTexture}
     */
    PlayerTexture: PlayerTexture,
    /**
     * The PlayerTextureURL model constructor.
     * @property {module:model/PlayerTextureURL}
     */
    PlayerTextureURL: PlayerTextureURL,
    /**
     * The SessionApiError model constructor.
     * @property {module:model/SessionApiError}
     */
    SessionApiError: SessionApiError,
    /**
     * The BansApi service constructor.
     * @property {module:api/BansApi}
     */
    BansApi: BansApi,
    /**
     * The LoginApi service constructor.
     * @property {module:api/LoginApi}
     */
    LoginApi: LoginApi
  };

  return exports;
}));
