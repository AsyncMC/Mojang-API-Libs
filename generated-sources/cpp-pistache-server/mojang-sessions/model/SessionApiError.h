/**
* Mojang Session API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* OpenAPI spec version: 2020-06-05
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * SessionApiError.h
 *
 * An object describing giving a bit of information about the error
 */

#ifndef SessionApiError_H_
#define SessionApiError_H_


#include "ModelBase.h"

#include <string>

namespace com {
namespace github {
namespace asyncmc {
namespace mojang {
namespace sessions {
namespace cpp {
namespace pistache {
namespace server {
namespace model {

/// <summary>
/// An object describing giving a bit of information about the error
/// </summary>
class  SessionApiError
    : public ModelBase
{
public:
    SessionApiError();
    virtual ~SessionApiError();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(const nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// SessionApiError members

    /// <summary>
    /// A message describing the error
    /// </summary>
    std::string getError() const;
    void setError(std::string const& value);
    bool errorIsSet() const;
    void unsetError();
    /// <summary>
    /// The request path
    /// </summary>
    std::string getPath() const;
    void setPath(std::string const& value);
    bool pathIsSet() const;
    void unsetPath();

protected:
    std::string m_Error;
    bool m_ErrorIsSet;
    std::string m_Path;
    bool m_PathIsSet;
};

}
}
}
}
}
}
}
}
}

#endif /* SessionApiError_H_ */
