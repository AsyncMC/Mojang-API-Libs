/**
* Mojang Session API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* OpenAPI spec version: 2020-06-05
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * PlayerProfile.h
 *
 * 
 */

#ifndef PlayerProfile_H_
#define PlayerProfile_H_


#include "ModelBase.h"

#include "PlayerProfileProperty.h"
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  PlayerProfile
    : public ModelBase
{
public:
    PlayerProfile();
    virtual ~PlayerProfile();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(const nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// PlayerProfile members

    /// <summary>
    /// The player UUID without hyphens
    /// </summary>
    std::string getId() const;
    void setId(std::string const& value);
        /// <summary>
    /// 
    /// </summary>
    std::string getName() const;
    void setName(std::string const& value);
        /// <summary>
    /// Will appear in the response if the user has not migrated their minecraft.net account to Mojang.
    /// </summary>
    bool isLegacy() const;
    void setLegacy(bool const value);
    bool legacyIsSet() const;
    void unsetLegacy();
    /// <summary>
    /// An array with all player properties, like skin and cape
    /// </summary>
    std::vector<PlayerProfileProperty>& getProperties();
    
protected:
    std::string m_Id;

    std::string m_Name;

    bool m_Legacy;
    bool m_LegacyIsSet;
    std::vector<PlayerProfileProperty> m_Properties;

};

}
}
}
}

#endif /* PlayerProfile_H_ */
