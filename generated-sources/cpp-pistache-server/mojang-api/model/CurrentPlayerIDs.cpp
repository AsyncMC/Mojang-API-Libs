/**
* Mojang API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* OpenAPI spec version: 2020-06-05
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "CurrentPlayerIDs.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

CurrentPlayerIDs::CurrentPlayerIDs()
{
    m_Id = "";
    m_Name = "";
    m_Legacy = false;
    m_LegacyIsSet = false;
    m_Demo = false;
    m_DemoIsSet = false;
    
}

CurrentPlayerIDs::~CurrentPlayerIDs()
{
}

void CurrentPlayerIDs::validate()
{
    // TODO: implement validation
}

nlohmann::json CurrentPlayerIDs::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["id"] = ModelBase::toJson(m_Id);
    val["name"] = ModelBase::toJson(m_Name);
    if(m_LegacyIsSet)
    {
        val["legacy"] = m_Legacy;
    }
    if(m_DemoIsSet)
    {
        val["demo"] = m_Demo;
    }
    

    return val;
}

void CurrentPlayerIDs::fromJson(const nlohmann::json& val)
{
    setId(val.at("id"));
    setName(val.at("name"));
    if(val.find("legacy") != val.end())
    {
        setLegacy(val.at("legacy"));
    }
    if(val.find("demo") != val.end())
    {
        setDemo(val.at("demo"));
    }
    
}


std::string CurrentPlayerIDs::getId() const
{
    return m_Id;
}
void CurrentPlayerIDs::setId(std::string const& value)
{
    m_Id = value;
    
}
std::string CurrentPlayerIDs::getName() const
{
    return m_Name;
}
void CurrentPlayerIDs::setName(std::string const& value)
{
    m_Name = value;
    
}
bool CurrentPlayerIDs::isLegacy() const
{
    return m_Legacy;
}
void CurrentPlayerIDs::setLegacy(bool const value)
{
    m_Legacy = value;
    m_LegacyIsSet = true;
}
bool CurrentPlayerIDs::legacyIsSet() const
{
    return m_LegacyIsSet;
}
void CurrentPlayerIDs::unsetLegacy()
{
    m_LegacyIsSet = false;
}
bool CurrentPlayerIDs::isDemo() const
{
    return m_Demo;
}
void CurrentPlayerIDs::setDemo(bool const value)
{
    m_Demo = value;
    m_DemoIsSet = true;
}
bool CurrentPlayerIDs::demoIsSet() const
{
    return m_DemoIsSet;
}
void CurrentPlayerIDs::unsetDemo()
{
    m_DemoIsSet = false;
}

}
}
}
}

