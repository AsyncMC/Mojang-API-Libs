/**
* Mojang API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* OpenAPI spec version: 2020-06-05
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Error.h"

namespace com {
namespace github {
namespace asyncmc {
namespace mojang {
namespace api {
namespace cpp {
namespace pistache {
namespace server {
namespace model {

Error::Error()
{
    m_Error = "";
    m_ErrorIsSet = false;
    m_ErrorMessage = "";
    m_ErrorMessageIsSet = false;
    
}

Error::~Error()
{
}

void Error::validate()
{
    // TODO: implement validation
}

nlohmann::json Error::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_ErrorIsSet)
    {
        val["error"] = ModelBase::toJson(m_Error);
    }
    if(m_ErrorMessageIsSet)
    {
        val["errorMessage"] = ModelBase::toJson(m_ErrorMessage);
    }
    

    return val;
}

void Error::fromJson(const nlohmann::json& val)
{
    if(val.find("error") != val.end())
    {
        setError(val.at("error"));
    }
    if(val.find("errorMessage") != val.end())
    {
        setErrorMessage(val.at("errorMessage"));
    }
    
}


std::string Error::getError() const
{
    return m_Error;
}
void Error::setError(std::string const& value)
{
    m_Error = value;
    m_ErrorIsSet = true;
}
bool Error::errorIsSet() const
{
    return m_ErrorIsSet;
}
void Error::unsetError()
{
    m_ErrorIsSet = false;
}
std::string Error::getErrorMessage() const
{
    return m_ErrorMessage;
}
void Error::setErrorMessage(std::string const& value)
{
    m_ErrorMessage = value;
    m_ErrorMessageIsSet = true;
}
bool Error::errorMessageIsSet() const
{
    return m_ErrorMessageIsSet;
}
void Error::unsetErrorMessage()
{
    m_ErrorMessageIsSet = false;
}

}
}
}
}
}
}
}
}
}

