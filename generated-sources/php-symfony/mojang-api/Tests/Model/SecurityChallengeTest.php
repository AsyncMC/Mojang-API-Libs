<?php
/**
 * SecurityChallengeTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  com.github.asyncmc.mojang.api.php.symfony.server\Tests\Model
 * @author   openapi-generator contributors
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Mojang API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */

namespace com.github.asyncmc.mojang.api.php.symfony.server\com.github.asyncmc.mojang.api.php.symfony.model;

/**
 * SecurityChallengeTest Class Doc Comment
 *
 * @category    Class */
// * @description Binds a question to an answer id, the answer must respect the answer id.
/**
 * @package     com.github.asyncmc.mojang.api.php.symfony.server\Tests\Model
 * @author      openapi-generator contributors
 * @link        https://github.com/openapitools/openapi-generator
 */
class SecurityChallengeTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "SecurityChallenge"
     */
    public function testSecurityChallenge()
    {
        $testSecurityChallenge = new SecurityChallenge();
    }

    /**
     * Test attribute "question"
     */
    public function testPropertyQuestion()
    {
    }

    /**
     * Test attribute "answer"
     */
    public function testPropertyAnswer()
    {
    }
}
