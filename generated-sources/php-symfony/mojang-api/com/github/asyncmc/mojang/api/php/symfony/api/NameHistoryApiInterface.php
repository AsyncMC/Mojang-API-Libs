<?php
/**
 * NameHistoryApiInterface
 * PHP version 5
 *
 * @category Class
 * @package  com.github.asyncmc.mojang.api.php.symfony.server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Mojang API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace com.github.asyncmc.mojang.api.php.symfony.server\com.github.asyncmc.mojang.api.php.symfony.api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use com.github.asyncmc.mojang.api.php.symfony.server\com.github.asyncmc.mojang.api.php.symfony.model\CurrentPlayerIDs;
use com.github.asyncmc.mojang.api.php.symfony.server\com.github.asyncmc.mojang.api.php.symfony.model\Error;
use com.github.asyncmc.mojang.api.php.symfony.server\com.github.asyncmc.mojang.api.php.symfony.model\NameChange;

/**
 * NameHistoryApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  com.github.asyncmc.mojang.api.php.symfony.server\com.github.asyncmc.mojang.api.php.symfony.api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface NameHistoryApiInterface
{

    /**
     * Operation findUniqueIdsByName
     *
     * Find the current UUID of multiple players at once
     *
     * @param  string[] $requestBody  Array with the player names (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return com.github.asyncmc.mojang.api.php.symfony.server\com.github.asyncmc.mojang.api.php.symfony.model\CurrentPlayerIDs[]
     *
     */
    public function findUniqueIdsByName(array $requestBody, &$responseCode, array &$responseHeaders);

    /**
     * Operation getNameHistory
     *
     * Gets the full player's name history
     *
     * @param  string $strippedUuid  The player UUID without hyphens (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return com.github.asyncmc.mojang.api.php.symfony.server\com.github.asyncmc.mojang.api.php.symfony.model\NameChange[]
     *
     */
    public function getNameHistory($strippedUuid, &$responseCode, array &$responseHeaders);

    /**
     * Operation getUniqueIdByName
     *
     * Find the UUID by name
     *
     * @param  string $username  The username in a given time, or in present if \&quot;at\&quot; is not sent (required)
     * @param  int $at  Find the username in a given time, when 0 selects the original name however, it only works if the name was changed at least once, or if the account is legacy. The time is an UNIX timestamp (without milliseconds) (optional)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return com.github.asyncmc.mojang.api.php.symfony.server\com.github.asyncmc.mojang.api.php.symfony.model\CurrentPlayerIDs[]
     *
     */
    public function getUniqueIdByName($username, $at = null, &$responseCode, array &$responseHeaders);
}
