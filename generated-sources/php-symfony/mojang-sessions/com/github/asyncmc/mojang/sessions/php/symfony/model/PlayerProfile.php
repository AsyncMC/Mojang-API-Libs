<?php
/**
 * PlayerProfile
 *
 * PHP version 5
 *
 * @category Class
 * @package  com.github.asyncmc.mojang.sessions.php.symfony.server\com.github.asyncmc.mojang.sessions.php.symfony.model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Mojang Session API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace com.github.asyncmc.mojang.sessions.php.symfony.server\com.github.asyncmc.mojang.sessions.php.symfony.model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the PlayerProfile model.
 *
 * @package com.github.asyncmc.mojang.sessions.php.symfony.server\com.github.asyncmc.mojang.sessions.php.symfony.model
 * @author  OpenAPI Generator team
 */
class PlayerProfile 
{
        /**
     * The player UUID without hyphens
     *
     * @var string
     * @SerializedName("id")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $id;

    /**
     * @var string
     * @SerializedName("name")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $name;

    /**
     * Will appear in the response if the user has not migrated their minecraft.net account to Mojang.
     *
     * @var bool|null
     * @SerializedName("legacy")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $legacy;

    /**
     * An array with all player properties, like skin and cape
     *
     * @var com.github.asyncmc.mojang.sessions.php.symfony.server\com.github.asyncmc.mojang.sessions.php.symfony.model\PlayerProfileProperty[]
     * @SerializedName("properties")
     * @Assert\NotNull()
     * @Assert\All({
     *   @Assert\Type("com.github.asyncmc.mojang.sessions.php.symfony.server\com.github.asyncmc.mojang.sessions.php.symfony.model\PlayerProfileProperty")
     * })
     * @Type("array<com.github.asyncmc.mojang.sessions.php.symfony.server\com.github.asyncmc.mojang.sessions.php.symfony.model\PlayerProfileProperty>")
     */
    protected $properties;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->name = isset($data['name']) ? $data['name'] : null;
        $this->legacy = isset($data['legacy']) ? $data['legacy'] : false;
        $this->properties = isset($data['properties']) ? $data['properties'] : null;
    }

    /**
     * Gets id.
     *
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param string $id  The player UUID without hyphens
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets name.
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Sets name.
     *
     * @param string $name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets legacy.
     *
     * @return bool|null
     */
    public function isLegacy()
    {
        return $this->legacy;
    }

    /**
     * Sets legacy.
     *
     * @param bool|null $legacy  Will appear in the response if the user has not migrated their minecraft.net account to Mojang.
     *
     * @return $this
     */
    public function setLegacy($legacy = null)
    {
        $this->legacy = $legacy;

        return $this;
    }

    /**
     * Gets properties.
     *
     * @return com.github.asyncmc.mojang.sessions.php.symfony.server\com.github.asyncmc.mojang.sessions.php.symfony.model\PlayerProfileProperty[]
     */
    public function getProperties()
    {
        return $this->properties;
    }

    /**
     * Sets properties.
     *
     * @param com.github.asyncmc.mojang.sessions.php.symfony.server\com.github.asyncmc.mojang.sessions.php.symfony.model\PlayerProfileProperty[] $properties  An array with all player properties, like skin and cape
     *
     * @return $this
     */
    public function setProperties(array $properties)
    {
        $this->properties = $properties;

        return $this;
    }
}


