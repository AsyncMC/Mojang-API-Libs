<?php
/**
 * DefaultApiInterface
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Mojang Authentication API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\AccessKeys;
use OpenAPI\Server\Model\Authentication;
use OpenAPI\Server\Model\AuthenticationRequest;
use OpenAPI\Server\Model\Error;
use OpenAPI\Server\Model\RefreshRequest;
use OpenAPI\Server\Model\RefreshResponse;
use OpenAPI\Server\Model\UsernamePassword;

/**
 * DefaultApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface DefaultApiInterface
{

    /**
     * Operation authenticate
     *
     * @param  OpenAPI\Server\Model\AuthenticationRequest $authenticationRequest   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\Authentication[]
     *
     */
    public function authenticate(AuthenticationRequest $authenticationRequest, &$responseCode, array &$responseHeaders);

    /**
     * Operation invalidate
     *
     * @param  OpenAPI\Server\Model\AccessKeys $accessKeys   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function invalidate(AccessKeys $accessKeys, &$responseCode, array &$responseHeaders);

    /**
     * Operation refresh
     *
     * @param  OpenAPI\Server\Model\RefreshRequest $refreshRequest   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\RefreshResponse[]
     *
     */
    public function refresh(RefreshRequest $refreshRequest, &$responseCode, array &$responseHeaders);

    /**
     * Operation siginout
     *
     * @param  OpenAPI\Server\Model\UsernamePassword $usernamePassword   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function siginout(UsernamePassword $usernamePassword, &$responseCode, array &$responseHeaders);

    /**
     * Operation validate
     *
     * @param  OpenAPI\Server\Model\AccessKeys $accessKeys   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function validate(AccessKeys $accessKeys, &$responseCode, array &$responseHeaders);
}
