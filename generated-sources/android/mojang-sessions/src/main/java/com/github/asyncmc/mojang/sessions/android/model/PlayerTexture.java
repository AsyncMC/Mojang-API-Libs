/**
 * Mojang Session API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.github.asyncmc.mojang.sessions.android.model;

import com.github.asyncmc.mojang.sessions.android.model.PlayerSkinURL;
import com.github.asyncmc.mojang.sessions.android.model.PlayerTextureURL;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Provide links to the player&#39;s skin and cape
 **/
@ApiModel(description = "Provide links to the player's skin and cape")
public class PlayerTexture {
  
  @SerializedName("SKIN")
  private PlayerSkinURL SKIN = null;
  @SerializedName("CAPE")
  private PlayerTextureURL CAPE = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public PlayerSkinURL getSKIN() {
    return SKIN;
  }
  public void setSKIN(PlayerSkinURL SKIN) {
    this.SKIN = SKIN;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public PlayerTextureURL getCAPE() {
    return CAPE;
  }
  public void setCAPE(PlayerTextureURL CAPE) {
    this.CAPE = CAPE;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlayerTexture playerTexture = (PlayerTexture) o;
    return (this.SKIN == null ? playerTexture.SKIN == null : this.SKIN.equals(playerTexture.SKIN)) &&
        (this.CAPE == null ? playerTexture.CAPE == null : this.CAPE.equals(playerTexture.CAPE));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.SKIN == null ? 0: this.SKIN.hashCode());
    result = 31 * result + (this.CAPE == null ? 0: this.CAPE.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlayerTexture {\n");
    
    sb.append("  SKIN: ").append(SKIN).append("\n");
    sb.append("  CAPE: ").append(CAPE).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
