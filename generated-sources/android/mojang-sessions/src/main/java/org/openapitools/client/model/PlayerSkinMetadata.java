/**
 * Mojang Session API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Contains details about the skin
 **/
@ApiModel(description = "Contains details about the skin")
public class PlayerSkinMetadata {
  
  public enum ModelEnum {
     slim, 
  };
  @SerializedName("model")
  private ModelEnum model = null;

  /**
   * The player model, currently only \"slim\" (Alex) is valid, for Steve's model this property must be absent.
   **/
  @ApiModelProperty(value = "The player model, currently only \"slim\" (Alex) is valid, for Steve's model this property must be absent.")
  public ModelEnum getModel() {
    return model;
  }
  public void setModel(ModelEnum model) {
    this.model = model;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlayerSkinMetadata playerSkinMetadata = (PlayerSkinMetadata) o;
    return (this.model == null ? playerSkinMetadata.model == null : this.model.equals(playerSkinMetadata.model));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.model == null ? 0: this.model.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlayerSkinMetadata {\n");
    
    sb.append("  model: ").append(model).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
