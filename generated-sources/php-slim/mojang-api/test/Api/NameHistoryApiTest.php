<?php
/**
 * NameHistoryApiTest
 * PHP version 5
 *
 * @category Class
 * @package  com.github.asyncmc.mojang.api.php.slim.server\com.github.asyncmc.mojang.api.php.slim.api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Mojang API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 * OpenAPI spec version: 2020-06-05
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the endpoint.
 */
namespace com.github.asyncmc.mojang.api.php.slim.server\com.github.asyncmc.mojang.api.php.slim.api;

use com.github.asyncmc.mojang.api.php.slim.server\com.github.asyncmc.mojang.api.php.slim.api\NameHistoryApi;

/**
 * NameHistoryApiTest Class Doc Comment
 *
 * @category Class
 * @description NameHistoryApi
 * @package  com.github.asyncmc.mojang.api.php.slim.server\com.github.asyncmc.mojang.api.php.slim.api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 * @coversDefaultClass \com.github.asyncmc.mojang.api.php.slim.server\com.github.asyncmc.mojang.api.php.slim.model\NameHistoryApi
 */
class NameHistoryApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for findUniqueIdsByName
     *
     * Find the current UUID of multiple players at once.
     * @covers ::findUniqueIdsByName
     */
    public function testFindUniqueIdsByName()
    {
    }

    /**
     * Test case for getNameHistory
     *
     * Gets the full player's name history.
     * @covers ::getNameHistory
     */
    public function testGetNameHistory()
    {
    }

    /**
     * Test case for getUniqueIdByName
     *
     * Find the UUID by name.
     * @covers ::getUniqueIdByName
     */
    public function testGetUniqueIdByName()
    {
    }
}
