<?php
/**
 * SkinOperationsApi
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPIServer\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Mojang API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 * OpenAPI spec version: 2020-06-05
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */
namespace OpenAPIServer\Api;

use OpenAPIServer\AbstractApiController;

/**
 * SkinOperationsApi Class Doc Comment
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPIServer\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
class SkinOperationsApi extends AbstractApiController
{

    /**
     * POST changePlayerSkin
     * Summary: Changes the player skin by URL
     * Notes: This will set the skin for the selected profile, but Mojang&#39;s servers will fetch the skin from a URL. This will also work for legacy accounts.
     * Output-Formats: [application/json]
     *
     * @param \Psr\Http\Message\ServerRequestInterface $request  Request
     * @param \Psr\Http\Message\ResponseInterface      $response Response
     * @param array|null                               $args     Path arguments
     */
    public function changePlayerSkin($request, $response, $args)
    {
        $strippedUuid = $args['stripped_uuid'];
        $model = $request->getParsedBodyParam('model');
        $url = $request->getParsedBodyParam('url');
        $response->write('How about implementing changePlayerSkin as a POST method ?');
        return $response;
    }

    /**
     * DELETE resetPlayerSkin
     * Summary: Resets the player skin to default
     * Output-Formats: [application/json]
     *
     * @param \Psr\Http\Message\ServerRequestInterface $request  Request
     * @param \Psr\Http\Message\ResponseInterface      $response Response
     * @param array|null                               $args     Path arguments
     */
    public function resetPlayerSkin($request, $response, $args)
    {
        $strippedUuid = $args['stripped_uuid'];
        $response->write('How about implementing resetPlayerSkin as a DELETE method ?');
        return $response;
    }

    /**
     * PUT uploadPlayerSkin
     * Summary: Changes the player skin by upload
     * Notes: This uploads a skin to Mojang&#39;s servers. It also sets the users skin. This works on legacy counts as well.
     * Output-Formats: [application/json]
     *
     * @param \Psr\Http\Message\ServerRequestInterface $request  Request
     * @param \Psr\Http\Message\ResponseInterface      $response Response
     * @param array|null                               $args     Path arguments
     */
    public function uploadPlayerSkin($request, $response, $args)
    {
        $strippedUuid = $args['stripped_uuid'];
        $model = $request->getParsedBodyParam('model');
        $file = (key_exists('file', $request->getUploadedFiles())) ? $request->getUploadedFiles()['file'] : null;
        $response->write('How about implementing uploadPlayerSkin as a PUT method ?');
        return $response;
    }
}
