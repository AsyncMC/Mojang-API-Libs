/**
 * Mojang Authentication API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.3.4.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GameProfile.h
 *
 * 
 */

#ifndef GameProfile_H_
#define GameProfile_H_



#include <string>
#include <memory>

namespace com {
namespace github {
namespace asyncmc {
namespace mojang {
namespace authentication {
namespace cpp {
namespace restbed {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  GameProfile
{
public:
    GameProfile();
    virtual ~GameProfile();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// GameProfile members
    
    /// <summary>
    /// 
    /// </summary>
    std::string getAgent() const;
    void setAgent(std::string value);
    /// <summary>
    /// 
    /// </summary>
    std::string getId() const;
    void setId(std::string value);
    /// <summary>
    /// 
    /// </summary>
    std::string getName() const;
    void setName(std::string value);
    /// <summary>
    /// 
    /// </summary>
    std::string getUserId() const;
    void setUserId(std::string value);
    /// <summary>
    /// Unix timestamp in milliseconds
    /// </summary>
    int64_t getCreatedAt() const;
    void setCreatedAt(int64_t value);
    /// <summary>
    /// 
    /// </summary>
    bool isLegacyProfile() const;
    void setLegacyProfile(bool value);
    /// <summary>
    /// 
    /// </summary>
    bool isSuspended() const;
    void setSuspended(bool value);
    /// <summary>
    /// 
    /// </summary>
    bool isPaid() const;
    void setPaid(bool value);
    /// <summary>
    /// 
    /// </summary>
    bool isMigrated() const;
    void setMigrated(bool value);
    /// <summary>
    /// 
    /// </summary>
    bool isLegacy() const;
    void setLegacy(bool value);

protected:
    std::string m_Agent;
    std::string m_Id;
    std::string m_Name;
    std::string m_UserId;
    int64_t m_CreatedAt;
    bool m_LegacyProfile;
    bool m_Suspended;
    bool m_Paid;
    bool m_Migrated;
    bool m_Legacy;
};

}
}
}
}
}
}
}
}
}

#endif /* GameProfile_H_ */
