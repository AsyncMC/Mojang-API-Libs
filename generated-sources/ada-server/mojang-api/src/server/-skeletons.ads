--  Mojang API
--  No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
--
--  OpenAPI spec version: 2020_06_05
--  
--
--  NOTE: This package is auto generated by the swagger code generator 3.3.4.
--  https://openapi-generator.tech
--  Do not edit the class manually.
with Swagger.Servers;
with .Models;
with Security.Permissions;
package .Skeletons is
   use .Models;
   type Server_Type is limited interface;



   --  Get statistics on the sales of Minecraft.
   procedure Get_Orders_Statistics
      (Server : in out Server_Type;
       Order_Statistics_Request_Type : in OrderStatisticsRequest_Type;
       Result  : out .Models.OrderStatisticsResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Find the current UUID of multiple players at once
   --  Find the current players name, UUID, demo status and migration flag by the current players name. The "at" parameter is not supported. Players not found are not returned. If no players are found, an empty array is returned.
   procedure Find_Unique_Ids_By_Name
      (Server : in out Server_Type;
       String : in Swagger.UString_Vectors.Vector;
       Result  : out .Models.CurrentPlayerIDs_Type_Vectors.Vector;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Gets the full player's name history
   procedure Get_Name_History
      (Server : in out Server_Type;
       Stripped_Uuid : in Swagger.UString;
       Result  : out .Models.NameChange_Type_Vectors.Vector;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Find the UUID by name
   --  Find the current player name, UUID, demo status and migration flag by the current player name or at a given time.
   procedure Get_Unique_Id_By_Name
      (Server : in out Server_Type;
       Username : in Swagger.UString;
       P_At : in Swagger.Nullable_Long;
       Result  : out .Models.CurrentPlayerIDs_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Check if security questions are needed
   procedure Check_Security_Status
      (Server : in out Server_Type
       ;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Get list of questions
   procedure List_Pending_Security_Questions
      (Server : in out Server_Type
       ;
       Result  : out .Models.SecurityChallenge_Type_Vectors.Vector;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Send back the answers
   procedure Send_Security_Question_Answers
      (Server : in out Server_Type;
       Security_Answer : in .Models.SecurityAnswer_Type_Vectors.Vector;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Changes the player skin by URL
   --  This will set the skin for the selected profile, but Mojang's servers will fetch the skin from a URL. This will also work for legacy accounts.
   procedure Change_Player_Skin
      (Server : in out Server_Type;
       Stripped_Uuid : in Swagger.UString;
       Url : in Swagger.UString;
       Model : in .Models.SkinModel_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Resets the player skin to default
   procedure Reset_Player_Skin
      (Server : in out Server_Type;
       Stripped_Uuid : in Swagger.UString;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Changes the player skin by upload
   --  This uploads a skin to Mojang's servers. It also sets the users skin. This works on legacy counts as well.
   procedure Upload_Player_Skin
      (Server : in out Server_Type;
       Stripped_Uuid : in Swagger.UString;
       File : in Swagger.File_Part_Type;
       Model : in .Models.SkinModel_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   generic
      type Implementation_Type is limited new Server_Type with private;
      URI_Prefix : String := "";
   package Skeleton is

      procedure Register (Server : in out Swagger.Servers.Application_Type'Class);


      --  Get statistics on the sales of Minecraft.
      procedure Get_Orders_Statistics
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Find the current UUID of multiple players at once
      procedure Find_Unique_Ids_By_Name
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Gets the full player's name history
      procedure Get_Name_History
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Find the UUID by name
      procedure Get_Unique_Id_By_Name
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Check if security questions are needed
      procedure Check_Security_Status
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Get list of questions
      procedure List_Pending_Security_Questions
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Send back the answers
      procedure Send_Security_Question_Answers
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Changes the player skin by URL
      procedure Change_Player_Skin
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Resets the player skin to default
      procedure Reset_Player_Skin
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Changes the player skin by upload
      procedure Upload_Player_Skin
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);

   end Skeleton;

   generic
      type Implementation_Type is limited new Server_Type with private;
      URI_Prefix : String := "";
   package Shared_Instance is

      procedure Register (Server : in out Swagger.Servers.Application_Type'Class);


      --  Get statistics on the sales of Minecraft.
      procedure Get_Orders_Statistics
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Find the current UUID of multiple players at once
      procedure Find_Unique_Ids_By_Name
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Gets the full player's name history
      procedure Get_Name_History
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Find the UUID by name
      procedure Get_Unique_Id_By_Name
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Check if security questions are needed
      procedure Check_Security_Status
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Get list of questions
      procedure List_Pending_Security_Questions
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Send back the answers
      procedure Send_Security_Question_Answers
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Changes the player skin by URL
      procedure Change_Player_Skin
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Resets the player skin to default
      procedure Reset_Player_Skin
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Changes the player skin by upload
      procedure Upload_Player_Skin
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


   private
      protected Server is

         --  Get statistics on the sales of Minecraft.
         procedure Get_Orders_Statistics
            (Order_Statistics_Request_Type : in OrderStatisticsRequest_Type;
             Result  : out .Models.OrderStatisticsResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Find the current UUID of multiple players at once
         procedure Find_Unique_Ids_By_Name
            (String : in Swagger.UString_Vectors.Vector;
             Result  : out .Models.CurrentPlayerIDs_Type_Vectors.Vector;
             Context : in out Swagger.Servers.Context_Type);

         --  Gets the full player's name history
         procedure Get_Name_History
            (Stripped_Uuid : in Swagger.UString;
             Result  : out .Models.NameChange_Type_Vectors.Vector;
             Context : in out Swagger.Servers.Context_Type);

         --  Find the UUID by name
         procedure Get_Unique_Id_By_Name
            (Username : in Swagger.UString;
             P_At : in Swagger.Nullable_Long;
             Result  : out .Models.CurrentPlayerIDs_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Check if security questions are needed
         procedure Check_Security_Status (Context : in out Swagger.Servers.Context_Type);

         --  Get list of questions
         procedure List_Pending_Security_Questions
            (Result  : out .Models.SecurityChallenge_Type_Vectors.Vector;
             Context : in out Swagger.Servers.Context_Type);

         --  Send back the answers
         procedure Send_Security_Question_Answers
            (Security_Answer : in .Models.SecurityAnswer_Type_Vectors.Vector;
             Context : in out Swagger.Servers.Context_Type);

         --  Changes the player skin by URL
         procedure Change_Player_Skin
            (Stripped_Uuid : in Swagger.UString;
             Url : in Swagger.UString;
             Model : in .Models.SkinModel_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Resets the player skin to default
         procedure Reset_Player_Skin
            (Stripped_Uuid : in Swagger.UString;
             Context : in out Swagger.Servers.Context_Type);

         --  Changes the player skin by upload
         procedure Upload_Player_Skin
            (Stripped_Uuid : in Swagger.UString;
             File : in Swagger.File_Part_Type;
             Model : in .Models.SkinModel_Type;
             Context : in out Swagger.Servers.Context_Type);

      private
         Impl : Implementation_Type;
      end Server;
   end Shared_Instance;

end .Skeletons;
