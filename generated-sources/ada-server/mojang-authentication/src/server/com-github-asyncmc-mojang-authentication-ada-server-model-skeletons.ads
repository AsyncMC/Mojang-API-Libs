--  Mojang Authentication API
--  No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
--
--  OpenAPI spec version: 2020_06_05
--  
--
--  NOTE: This package is auto generated by the swagger code generator 3.3.4.
--  https://openapi-generator.tech
--  Do not edit the class manually.
with Swagger.Servers;
with com.github.asyncmc.mojang.authentication.ada.server.model.Models;
with Security.Permissions;
package com.github.asyncmc.mojang.authentication.ada.server.model.Skeletons is
   use com.github.asyncmc.mojang.authentication.ada.server.model.Models;
   type Server_Type is limited interface;



   --  
   procedure Authenticate
      (Server : in out Server_Type;
       Authentication_Request_Type : in AuthenticationRequest_Type;
       Result  : out com.github.asyncmc.mojang.authentication.ada.server.model.Models.Authentication_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  
   procedure Invalidate
      (Server : in out Server_Type;
       Access_Keys_Type : in AccessKeys_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  
   procedure Refresh
      (Server : in out Server_Type;
       Refresh_Request_Type : in RefreshRequest_Type;
       Result  : out com.github.asyncmc.mojang.authentication.ada.server.model.Models.RefreshResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  
   procedure Siginout
      (Server : in out Server_Type;
       Username_Password_Type : in UsernamePassword_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  
   procedure Validate
      (Server : in out Server_Type;
       Access_Keys_Type : in AccessKeys_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   generic
      type Implementation_Type is limited new Server_Type with private;
      URI_Prefix : String := "";
   package Skeleton is

      procedure Register (Server : in out Swagger.Servers.Application_Type'Class);


      --  
      procedure Authenticate
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Invalidate
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Refresh
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Siginout
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Validate
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);

   end Skeleton;

   generic
      type Implementation_Type is limited new Server_Type with private;
      URI_Prefix : String := "";
   package Shared_Instance is

      procedure Register (Server : in out Swagger.Servers.Application_Type'Class);


      --  
      procedure Authenticate
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Invalidate
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Refresh
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Siginout
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Validate
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


   private
      protected Server is

         --  
         procedure Authenticate
            (Authentication_Request_Type : in AuthenticationRequest_Type;
             Result  : out com.github.asyncmc.mojang.authentication.ada.server.model.Models.Authentication_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  
         procedure Invalidate
            (Access_Keys_Type : in AccessKeys_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  
         procedure Refresh
            (Refresh_Request_Type : in RefreshRequest_Type;
             Result  : out com.github.asyncmc.mojang.authentication.ada.server.model.Models.RefreshResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  
         procedure Siginout
            (Username_Password_Type : in UsernamePassword_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  
         procedure Validate
            (Access_Keys_Type : in AccessKeys_Type;
             Context : in out Swagger.Servers.Context_Type);

      private
         Impl : Implementation_Type;
      end Server;
   end Shared_Instance;

end com.github.asyncmc.mojang.authentication.ada.server.model.Skeletons;
