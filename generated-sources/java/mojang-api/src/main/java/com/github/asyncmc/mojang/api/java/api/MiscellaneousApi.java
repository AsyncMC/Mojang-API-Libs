/*
 * Mojang API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.asyncmc.mojang.api.java.api;

import com.github.asyncmc.mojang.api.java.server.ApiCallback;
import com.github.asyncmc.mojang.api.java.server.ApiClient;
import com.github.asyncmc.mojang.api.java.server.ApiException;
import com.github.asyncmc.mojang.api.java.server.ApiResponse;
import com.github.asyncmc.mojang.api.java.server.Configuration;
import com.github.asyncmc.mojang.api.java.server.Pair;
import com.github.asyncmc.mojang.api.java.server.ProgressRequestBody;
import com.github.asyncmc.mojang.api.java.server.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.github.asyncmc.mojang.api.java.model.OrderStatisticsRequest;
import com.github.asyncmc.mojang.api.java.model.OrderStatisticsResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class MiscellaneousApi {
    private ApiClient apiClient;

    public MiscellaneousApi() {
        this(Configuration.getDefaultApiClient());
    }

    public MiscellaneousApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for getOrdersStatistics
     * @param orderStatisticsRequest The payload is a json list of options under the metricKeys key. You will receive a single object corresponding to the sum of sales of the requested type(s). You must request at least one type of sale. Below is the default list used by https://minecraft.net/en/stats/ (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getOrdersStatisticsCall(OrderStatisticsRequest orderStatisticsRequest, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = orderStatisticsRequest;

        // create path and map variables
        String localVarPath = "/orders/statistics";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if (progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "MojangStatisticsToken" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getOrdersStatisticsValidateBeforeCall(OrderStatisticsRequest orderStatisticsRequest, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'orderStatisticsRequest' is set
        if (orderStatisticsRequest == null) {
            throw new ApiException("Missing the required parameter 'orderStatisticsRequest' when calling getOrdersStatistics(Async)");
        }
        

        com.squareup.okhttp.Call call = getOrdersStatisticsCall(orderStatisticsRequest, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Get statistics on the sales of Minecraft.
     * 
     * @param orderStatisticsRequest The payload is a json list of options under the metricKeys key. You will receive a single object corresponding to the sum of sales of the requested type(s). You must request at least one type of sale. Below is the default list used by https://minecraft.net/en/stats/ (required)
     * @return OrderStatisticsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OrderStatisticsResponse getOrdersStatistics(OrderStatisticsRequest orderStatisticsRequest) throws ApiException {
        ApiResponse<OrderStatisticsResponse> resp = getOrdersStatisticsWithHttpInfo(orderStatisticsRequest);
        return resp.getData();
    }

    /**
     * Get statistics on the sales of Minecraft.
     * 
     * @param orderStatisticsRequest The payload is a json list of options under the metricKeys key. You will receive a single object corresponding to the sum of sales of the requested type(s). You must request at least one type of sale. Below is the default list used by https://minecraft.net/en/stats/ (required)
     * @return ApiResponse&lt;OrderStatisticsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OrderStatisticsResponse> getOrdersStatisticsWithHttpInfo(OrderStatisticsRequest orderStatisticsRequest) throws ApiException {
        com.squareup.okhttp.Call call = getOrdersStatisticsValidateBeforeCall(orderStatisticsRequest, null, null);
        Type localVarReturnType = new TypeToken<OrderStatisticsResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get statistics on the sales of Minecraft. (asynchronously)
     * 
     * @param orderStatisticsRequest The payload is a json list of options under the metricKeys key. You will receive a single object corresponding to the sum of sales of the requested type(s). You must request at least one type of sale. Below is the default list used by https://minecraft.net/en/stats/ (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getOrdersStatisticsAsync(OrderStatisticsRequest orderStatisticsRequest, final ApiCallback<OrderStatisticsResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getOrdersStatisticsValidateBeforeCall(orderStatisticsRequest, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OrderStatisticsResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
