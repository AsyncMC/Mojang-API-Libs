/**
 * Mojang Session API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

export interface PlayerProfile {
  /**
   * The player UUID without hyphens
   */
  id: string;
  name: string;
  /**
   * Will appear in the response if the user has not migrated their minecraft.net account to Mojang.
   */
  legacy?: boolean;
  /**
   * An array with all player properties, like skin and cape
   */
  properties: Array<PlayerProfileProperty>;
}

/**
 * A profile property, may be signed. The values are encoded by base64 and usually contains a json. The schema for the textures are described at PlayerProfileTexturePropertyValue
 */
export interface PlayerProfileProperty {
  /**
   * The property name
   */
  name: string;
  /**
   * The serialized property value in base64.
   */
  value: string;
  /**
   * signed data using Yggdrasil's private key
   */
  signature?: string;
}

/**
 * This is obtained by decoding the \"textures\" property
 */
export interface PlayerProfileTexturePropertyValue {
  /**
   * UNIX timestamp in milliseconds
   */
  timestamp: number;
  /**
   * The player UUID without hyphens
   */
  profileId: string;
  /**
   * The player's name
   */
  profileName: string;
  /**
   * Only present if unsigned was set to false in the request
   */
  signatureRequired?: boolean;
  textures?: PlayerTexture;
}

/**
 * Contains details about the skin
 */
export interface PlayerSkinMetadata {
  /**
   * The player model, currently only \"slim\" (Alex) is valid, for Steve's model this property must be absent.
   */
  model?: PlayerSkinMetadataModelEnum;
}

/**
 * Enum for the model property.
 */
export type PlayerSkinMetadataModelEnum = 'slim';

/**
 * Wraps the URL to the texture and configures the player's model
 */
export interface PlayerSkinURL extends PlayerTextureURL {
}

/**
 * Provide links to the player's skin and cape
 */
export interface PlayerTexture {
  SKIN?: PlayerSkinURL;
  CAPE?: PlayerTextureURL;
}

/**
 * Wraps the URL to the texture
 */
export interface PlayerTextureURL {
  /**
   * The URL to the texture, must be in Mojang's domains.
   */
  url: string;
}

/**
 * An object describing giving a bit of information about the error
 */
export interface SessionApiError {
  /**
   * A message describing the error
   */
  error?: string;
  /**
   * The request path
   */
  path?: string;
}

