{-
   Mojang Session API
   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI spec version: 2020-06-05

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.PlayerProfileProperty exposing (PlayerProfileProperty, decoder, encoder)

import Byte exposing (Byte)
import Byte exposing (Byte)
import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


{-| A profile property, may be signed. The values are encoded by base64 and usually contains a json. The schema for the textures are described at PlayerProfileTexturePropertyValue
-}
type alias PlayerProfileProperty =
    { name : String
    , value : Byte
    , signature : Maybe (Byte)
    }


decoder : Decoder PlayerProfileProperty
decoder =
    Decode.succeed PlayerProfileProperty
        |> required "name" Decode.string
        |> required "value" Byte.decoder
        |> optional "signature" (Decode.nullable Byte.decoder) Nothing



encoder : PlayerProfileProperty -> Encode.Value
encoder model =
    Encode.object
        [ ( "name", Encode.string model.name )
        , ( "value", Byte.encoder model.value )
        , ( "signature", Maybe.withDefault Encode.null (Maybe.map Byte.encoder model.signature) )

        ]


