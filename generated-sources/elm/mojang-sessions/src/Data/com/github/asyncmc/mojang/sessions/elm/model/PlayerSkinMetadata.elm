{-
   Mojang Session API
   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI spec version: 2020-06-05

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.PlayerSkinMetadata exposing (PlayerSkinMetadata, Model(..), decoder, encoder)

import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


{-| Contains details about the skin
-}
type alias PlayerSkinMetadata =
    { model : Maybe (Model)
    }


type Model
    = Slim



decoder : Decoder PlayerSkinMetadata
decoder =
    Decode.succeed PlayerSkinMetadata
        |> optional "model" (Decode.nullable modelDecoder) Nothing



encoder : PlayerSkinMetadata -> Encode.Value
encoder model =
    Encode.object
        [ ( "model", Maybe.withDefault Encode.null (Maybe.map modelEncoder model.model) )

        ]



modelDecoder : Decoder Model
modelDecoder =
    Decode.string
        |> Decode.andThen
            (\str ->
                case str of
                    "slim" ->
                        Decode.succeed Slim

                    other ->
                        Decode.fail <| "Unknown type: " ++ other
            )



modelEncoder : Model -> Encode.Value
modelEncoder model =
    case model of
        Slim ->
            Encode.string "slim"



