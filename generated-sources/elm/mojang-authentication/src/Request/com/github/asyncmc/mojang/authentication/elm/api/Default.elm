{-
   Mojang Authentication API
   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI spec version: 2020-06-05

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Request.Default exposing (authenticate, invalidate, refresh, siginout, validate)

import Data.RefreshRequest as RefreshRequest exposing (RefreshRequest)
import Data.AccessKeys as AccessKeys exposing (AccessKeys)
import Data.RefreshResponse as RefreshResponse exposing (RefreshResponse)
import Data.Authentication as Authentication exposing (Authentication)
import Data.Error as Error exposing (Error)
import Data.AuthenticationRequest as AuthenticationRequest exposing (AuthenticationRequest)
import Data.UsernamePassword as UsernamePassword exposing (UsernamePassword)
import Dict
import Http
import Json.Decode as Decode


basePath : String
basePath =
    "https://authserver.mojang.com"


authenticate : AuthenticationRequest -> Http.Request Authentication
authenticate model =
    { method = "POST"
    , url = basePath ++ "/authenticate"
    , headers = []
    , body = Http.jsonBody <| AuthenticationRequest.encoder model
    , expect = Http.expectJson Authentication.decoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


invalidate : AccessKeys -> Http.Request ()
invalidate model =
    { method = "POST"
    , url = basePath ++ "/invalidate"
    , headers = []
    , body = Http.jsonBody <| AccessKeys.encoder model
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


refresh : RefreshRequest -> Http.Request RefreshResponse
refresh model =
    { method = "POST"
    , url = basePath ++ "/refresh"
    , headers = []
    , body = Http.jsonBody <| RefreshRequest.encoder model
    , expect = Http.expectJson RefreshResponse.decoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


siginout : UsernamePassword -> Http.Request ()
siginout model =
    { method = "POST"
    , url = basePath ++ "/signout"
    , headers = []
    , body = Http.jsonBody <| UsernamePassword.encoder model
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


validate : AccessKeys -> Http.Request ()
validate model =
    { method = "POST"
    , url = basePath ++ "/validate"
    , headers = []
    , body = Http.jsonBody <| AccessKeys.encoder model
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request
