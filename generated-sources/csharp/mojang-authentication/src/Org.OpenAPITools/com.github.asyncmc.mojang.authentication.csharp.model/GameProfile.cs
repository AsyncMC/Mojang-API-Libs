/* 
 * Mojang Authentication API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.com.github.asyncmc.mojang.authentication.csharp.model
{
    /// <summary>
    /// GameProfile
    /// </summary>
    [DataContract]
    public partial class GameProfile :  IEquatable<GameProfile>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GameProfile" /> class.
        /// </summary>
        /// <param name="agent">agent.</param>
        /// <param name="id">id.</param>
        /// <param name="name">name.</param>
        /// <param name="userId">userId.</param>
        /// <param name="createdAt">Unix timestamp in milliseconds.</param>
        /// <param name="legacyProfile">legacyProfile.</param>
        /// <param name="suspended">suspended.</param>
        /// <param name="paid">paid.</param>
        /// <param name="migrated">migrated.</param>
        /// <param name="legacy">legacy.</param>
        public GameProfile(string agent = default(string), string id = default(string), string name = default(string), string userId = default(string), long? createdAt = default(long?), bool? legacyProfile = default(bool?), bool? suspended = default(bool?), bool? paid = default(bool?), bool? migrated = default(bool?), bool? legacy = default(bool?))
        {
            this.Agent = agent;
            this.Id = id;
            this.Name = name;
            this.UserId = userId;
            this.CreatedAt = createdAt;
            this.LegacyProfile = legacyProfile;
            this.Suspended = suspended;
            this.Paid = paid;
            this.Migrated = migrated;
            this.Legacy = legacy;
        }
        
        /// <summary>
        /// Gets or Sets Agent
        /// </summary>
        [DataMember(Name="agent", EmitDefaultValue=false)]
        public string Agent { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets UserId
        /// </summary>
        [DataMember(Name="userId", EmitDefaultValue=false)]
        public string UserId { get; set; }

        /// <summary>
        /// Unix timestamp in milliseconds
        /// </summary>
        /// <value>Unix timestamp in milliseconds</value>
        [DataMember(Name="createdAt", EmitDefaultValue=false)]
        public long? CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets LegacyProfile
        /// </summary>
        [DataMember(Name="legacyProfile", EmitDefaultValue=false)]
        public bool? LegacyProfile { get; set; }

        /// <summary>
        /// Gets or Sets Suspended
        /// </summary>
        [DataMember(Name="suspended", EmitDefaultValue=false)]
        public bool? Suspended { get; set; }

        /// <summary>
        /// Gets or Sets Paid
        /// </summary>
        [DataMember(Name="paid", EmitDefaultValue=false)]
        public bool? Paid { get; set; }

        /// <summary>
        /// Gets or Sets Migrated
        /// </summary>
        [DataMember(Name="migrated", EmitDefaultValue=false)]
        public bool? Migrated { get; set; }

        /// <summary>
        /// Gets or Sets Legacy
        /// </summary>
        [DataMember(Name="legacy", EmitDefaultValue=false)]
        public bool? Legacy { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GameProfile {\n");
            sb.Append("  Agent: ").Append(Agent).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  LegacyProfile: ").Append(LegacyProfile).Append("\n");
            sb.Append("  Suspended: ").Append(Suspended).Append("\n");
            sb.Append("  Paid: ").Append(Paid).Append("\n");
            sb.Append("  Migrated: ").Append(Migrated).Append("\n");
            sb.Append("  Legacy: ").Append(Legacy).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GameProfile);
        }

        /// <summary>
        /// Returns true if GameProfile instances are equal
        /// </summary>
        /// <param name="input">Instance of GameProfile to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GameProfile input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Agent == input.Agent ||
                    (this.Agent != null &&
                    this.Agent.Equals(input.Agent))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.UserId == input.UserId ||
                    (this.UserId != null &&
                    this.UserId.Equals(input.UserId))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.LegacyProfile == input.LegacyProfile ||
                    (this.LegacyProfile != null &&
                    this.LegacyProfile.Equals(input.LegacyProfile))
                ) && 
                (
                    this.Suspended == input.Suspended ||
                    (this.Suspended != null &&
                    this.Suspended.Equals(input.Suspended))
                ) && 
                (
                    this.Paid == input.Paid ||
                    (this.Paid != null &&
                    this.Paid.Equals(input.Paid))
                ) && 
                (
                    this.Migrated == input.Migrated ||
                    (this.Migrated != null &&
                    this.Migrated.Equals(input.Migrated))
                ) && 
                (
                    this.Legacy == input.Legacy ||
                    (this.Legacy != null &&
                    this.Legacy.Equals(input.Legacy))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Agent != null)
                    hashCode = hashCode * 59 + this.Agent.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.UserId != null)
                    hashCode = hashCode * 59 + this.UserId.GetHashCode();
                if (this.CreatedAt != null)
                    hashCode = hashCode * 59 + this.CreatedAt.GetHashCode();
                if (this.LegacyProfile != null)
                    hashCode = hashCode * 59 + this.LegacyProfile.GetHashCode();
                if (this.Suspended != null)
                    hashCode = hashCode * 59 + this.Suspended.GetHashCode();
                if (this.Paid != null)
                    hashCode = hashCode * 59 + this.Paid.GetHashCode();
                if (this.Migrated != null)
                    hashCode = hashCode * 59 + this.Migrated.GetHashCode();
                if (this.Legacy != null)
                    hashCode = hashCode * 59 + this.Legacy.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
