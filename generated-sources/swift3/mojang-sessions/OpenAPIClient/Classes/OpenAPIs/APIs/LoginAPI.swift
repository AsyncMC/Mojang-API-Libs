//
// LoginAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Alamofire


open class LoginAPI: APIBase {
    /**
     Gets the player's game profile
     - parameter strippedUuid: (path) The player UUID without hyphens 
     - parameter unsigned: (query) When set to false, the signature data are sent (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getPlayerProfile(strippedUuid: String, unsigned: Bool? = nil, completion: @escaping ((_ data: PlayerProfile?, _ error: ErrorResponse?) -> Void)) {
        getPlayerProfileWithRequestBuilder(strippedUuid: strippedUuid, unsigned: unsigned).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets the player's game profile
     - GET /session/minecraft/profile/{stripped_uuid}
     - This will return the player's username plus any additional information about them (e.g. skins). This has a much stricter rate limit: You can request the same profile once per minute, however you can send as many unique requests as you like.
     - parameter strippedUuid: (path) The player UUID without hyphens 
     - parameter unsigned: (query) When set to false, the signature data are sent (optional)
     - returns: RequestBuilder<PlayerProfile> 
     */
    open class func getPlayerProfileWithRequestBuilder(strippedUuid: String, unsigned: Bool? = nil) -> RequestBuilder<PlayerProfile> {
        var path = "/session/minecraft/profile/{stripped_uuid}"
        let strippedUuidPreEscape = "\(strippedUuid)"
        let strippedUuidPostEscape = strippedUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{stripped_uuid}", with: strippedUuidPostEscape, options: .literal, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "unsigned": unsigned
        ])

        let requestBuilder: RequestBuilder<PlayerProfile>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
