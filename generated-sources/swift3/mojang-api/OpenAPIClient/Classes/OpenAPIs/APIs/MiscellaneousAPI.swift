//
// MiscellaneousAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Alamofire


open class MiscellaneousAPI: APIBase {
    /**
     Get statistics on the sales of Minecraft.
     - parameter orderStatisticsRequest: (body) The payload is a json list of options under the metricKeys key. You will receive a single object corresponding to the sum of sales of the requested type(s). You must request at least one type of sale. Below is the default list used by https://minecraft.net/en/stats/ 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrdersStatistics(orderStatisticsRequest: OrderStatisticsRequest, completion: @escaping ((_ data: OrderStatisticsResponse?, _ error: ErrorResponse?) -> Void)) {
        getOrdersStatisticsWithRequestBuilder(orderStatisticsRequest: orderStatisticsRequest).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get statistics on the sales of Minecraft.
     - POST /orders/statistics
     - BASIC:
       - type: http
       - name: MojangStatisticsToken
     - parameter orderStatisticsRequest: (body) The payload is a json list of options under the metricKeys key. You will receive a single object corresponding to the sum of sales of the requested type(s). You must request at least one type of sale. Below is the default list used by https://minecraft.net/en/stats/ 
     - returns: RequestBuilder<OrderStatisticsResponse> 
     */
    open class func getOrdersStatisticsWithRequestBuilder(orderStatisticsRequest: OrderStatisticsRequest) -> RequestBuilder<OrderStatisticsResponse> {
        let path = "/orders/statistics"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = orderStatisticsRequest.encodeToJSON()

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<OrderStatisticsResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
