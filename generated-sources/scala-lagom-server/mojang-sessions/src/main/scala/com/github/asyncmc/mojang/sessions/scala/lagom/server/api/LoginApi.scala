/**
 * Mojang Session API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.github.asyncmc.mojang.sessions.scala.lagom.server.api

import akka.{Done, NotUsed}
import com.lightbend.lagom.scaladsl.api.transport.Method
import com.lightbend.lagom.scaladsl.api.{Service, ServiceCall}
import play.api.libs.json._
import com.lightbend.lagom.scaladsl.api.deser.PathParamSerializer

import com.github.asyncmc.mojang.sessions.scala.lagom.server.model.PlayerProfile
import com.github.asyncmc.mojang.sessions.scala.lagom.server.model.SessionApiError

trait LoginApi extends Service {


  final override def descriptor = {
    import Service._
    named("LoginApi").withCalls(
      restCall(Method.GET, "/session/minecraft/profile/:stripped_uuid?unsigned", getPlayerProfile _)
    ).withAutoAcl(true)
  }

      
  /**
    * Gets the player&#39;s game profile
    * This will return the player&#39;s username plus any additional information about them (e.g. skins). This has a much stricter rate limit: You can request the same profile once per minute, however you can send as many unique requests as you like.
    *  
    * @param strippedUuid The player UUID without hyphens  
    * @param unsigned When set to false, the signature data are sent (optional)
    * @return PlayerProfile
    */
  def getPlayerProfile(unsigned:           Option[Boolean] = NonestrippedUuid: String): ServiceCall[NotUsed ,PlayerProfile]
  

  }

