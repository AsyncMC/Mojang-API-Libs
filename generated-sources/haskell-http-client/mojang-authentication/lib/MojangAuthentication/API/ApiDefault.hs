{-
   Mojang Authentication API

   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI Version: 3.0.1
   Mojang Authentication API API version: 2020-06-05
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : MojangAuthentication.API.ApiDefault
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module MojangAuthentication.API.ApiDefault where

import MojangAuthentication.Core
import MojangAuthentication.MimeTypes
import MojangAuthentication.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Default

-- *** authenticate

-- | @POST \/authenticate@
-- 
authenticate 
  :: (Consumes Authenticate MimeJSON, MimeRender MimeJSON AuthenticationRequest)
  => AuthenticationRequest -- ^ "authenticationRequest"
  -> MojangAuthenticationRequest Authenticate MimeJSON Authentication MimeJSON
authenticate authenticationRequest =
  _mkRequest "POST" ["/authenticate"]
    `setBodyParam` authenticationRequest

data Authenticate 
instance HasBodyParam Authenticate AuthenticationRequest 

-- | @application/json@
instance Consumes Authenticate MimeJSON

-- | @application/json@
instance Produces Authenticate MimeJSON


-- *** invalidate

-- | @POST \/invalidate@
-- 
-- Note: Has 'Produces' instances, but no response schema
-- 
invalidate 
  :: (Consumes Invalidate MimeJSON, MimeRender MimeJSON AccessKeys)
  => AccessKeys -- ^ "accessKeys"
  -> MojangAuthenticationRequest Invalidate MimeJSON res MimeJSON
invalidate accessKeys =
  _mkRequest "POST" ["/invalidate"]
    `setBodyParam` accessKeys

data Invalidate 
instance HasBodyParam Invalidate AccessKeys 

-- | @application/json@
instance Consumes Invalidate MimeJSON

-- | @application/json@
instance Produces Invalidate MimeJSON


-- *** refresh

-- | @POST \/refresh@
-- 
refresh 
  :: (Consumes Refresh MimeJSON, MimeRender MimeJSON RefreshRequest)
  => RefreshRequest -- ^ "refreshRequest"
  -> MojangAuthenticationRequest Refresh MimeJSON RefreshResponse MimeJSON
refresh refreshRequest =
  _mkRequest "POST" ["/refresh"]
    `setBodyParam` refreshRequest

data Refresh 
instance HasBodyParam Refresh RefreshRequest 

-- | @application/json@
instance Consumes Refresh MimeJSON

-- | @application/json@
instance Produces Refresh MimeJSON


-- *** siginout

-- | @POST \/signout@
-- 
-- Note: Has 'Produces' instances, but no response schema
-- 
siginout 
  :: (Consumes Siginout MimeJSON, MimeRender MimeJSON UsernamePassword)
  => UsernamePassword -- ^ "usernamePassword"
  -> MojangAuthenticationRequest Siginout MimeJSON res MimeJSON
siginout usernamePassword =
  _mkRequest "POST" ["/signout"]
    `setBodyParam` usernamePassword

data Siginout 
instance HasBodyParam Siginout UsernamePassword 

-- | @application/json@
instance Consumes Siginout MimeJSON

-- | @application/json@
instance Produces Siginout MimeJSON


-- *** validate

-- | @POST \/validate@
-- 
-- Note: Has 'Produces' instances, but no response schema
-- 
validate 
  :: (Consumes Validate MimeJSON, MimeRender MimeJSON AccessKeys)
  => AccessKeys -- ^ "accessKeys"
  -> MojangAuthenticationRequest Validate MimeJSON res MimeJSON
validate accessKeys =
  _mkRequest "POST" ["/validate"]
    `setBodyParam` accessKeys

data Validate 
instance HasBodyParam Validate AccessKeys 

-- | @application/json@
instance Consumes Validate MimeJSON

-- | @application/json@
instance Produces Validate MimeJSON

