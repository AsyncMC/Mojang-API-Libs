{-
   Mojang API

   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI Version: 3.0.1
   Mojang API API version: 2020-06-05
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Mojang.Model
-}

{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveFoldable #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DeriveTraversable #-}
{-# LANGUAGE GeneralizedNewtypeDeriving #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TupleSections #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Mojang.Model where

import Mojang.Core
import Mojang.MimeTypes

import Data.Aeson ((.:),(.:!),(.:?),(.=))

import qualified Control.Arrow as P (left)
import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Base64 as B64
import qualified Data.ByteString.Char8 as BC
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.HashMap.Lazy as HM
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Set as Set
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Time as TI
import qualified Lens.Micro as L
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Control.Applicative ((<|>))
import Control.Applicative (Alternative)
import Data.Function ((&))
import Data.Monoid ((<>))
import Data.Text (Text)
import Prelude (($),(/=),(.),(<$>),(<*>),(>>=),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)

import qualified Prelude as P



-- * Parameter newtypes


-- * Models



-- * Enums


-- ** ApiStatus

-- | Enum of 'Text' . 
-- The status of a Mojang services. Possible values are green (no issues), yellow (some issues), red (service unavailable).
data ApiStatus
  = ApiStatus'Green -- ^ @"green"@
  | ApiStatus'Yellow -- ^ @"yellow"@
  | ApiStatus'Red -- ^ @"red"@
  deriving (P.Show, P.Eq, P.Typeable, P.Ord, P.Bounded, P.Enum)

instance A.ToJSON ApiStatus where toJSON = A.toJSON . fromApiStatus
instance A.FromJSON ApiStatus where parseJSON o = P.either P.fail (pure . P.id) . toApiStatus =<< A.parseJSON o
instance WH.ToHttpApiData ApiStatus where toQueryParam = WH.toQueryParam . fromApiStatus
instance WH.FromHttpApiData ApiStatus where parseQueryParam o = WH.parseQueryParam o >>= P.left T.pack . toApiStatus
instance MimeRender MimeMultipartFormData ApiStatus where mimeRender _ = mimeRenderDefaultMultipartFormData

-- | unwrap 'ApiStatus' enum
fromApiStatus :: ApiStatus -> Text
fromApiStatus = \case
  ApiStatus'Green -> "green"
  ApiStatus'Yellow -> "yellow"
  ApiStatus'Red -> "red"

-- | parse 'ApiStatus' enum
toApiStatus :: Text -> P.Either String ApiStatus
toApiStatus = \case
  "green" -> P.Right ApiStatus'Green
  "yellow" -> P.Right ApiStatus'Yellow
  "red" -> P.Right ApiStatus'Red
  s -> P.Left $ "toApiStatus: enum parse failure: " P.++ P.show s


