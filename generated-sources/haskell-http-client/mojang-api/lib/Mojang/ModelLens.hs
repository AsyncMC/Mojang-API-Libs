{-
   Mojang API

   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI Version: 3.0.1
   Mojang API API version: 2020-06-05
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Mojang.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Mojang.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import Mojang.Model
import Mojang.Core


-- * CurrentPlayerIDs

-- | 'currentPlayerIDsId' Lens
currentPlayerIDsIdL :: Lens_' CurrentPlayerIDs (Text)
currentPlayerIDsIdL f CurrentPlayerIDs{..} = (\currentPlayerIDsId -> CurrentPlayerIDs { currentPlayerIDsId, ..} ) <$> f currentPlayerIDsId
{-# INLINE currentPlayerIDsIdL #-}

-- | 'currentPlayerIDsName' Lens
currentPlayerIDsNameL :: Lens_' CurrentPlayerIDs (Text)
currentPlayerIDsNameL f CurrentPlayerIDs{..} = (\currentPlayerIDsName -> CurrentPlayerIDs { currentPlayerIDsName, ..} ) <$> f currentPlayerIDsName
{-# INLINE currentPlayerIDsNameL #-}

-- | 'currentPlayerIDsLegacy' Lens
currentPlayerIDsLegacyL :: Lens_' CurrentPlayerIDs (Maybe Bool)
currentPlayerIDsLegacyL f CurrentPlayerIDs{..} = (\currentPlayerIDsLegacy -> CurrentPlayerIDs { currentPlayerIDsLegacy, ..} ) <$> f currentPlayerIDsLegacy
{-# INLINE currentPlayerIDsLegacyL #-}

-- | 'currentPlayerIDsDemo' Lens
currentPlayerIDsDemoL :: Lens_' CurrentPlayerIDs (Maybe Bool)
currentPlayerIDsDemoL f CurrentPlayerIDs{..} = (\currentPlayerIDsDemo -> CurrentPlayerIDs { currentPlayerIDsDemo, ..} ) <$> f currentPlayerIDsDemo
{-# INLINE currentPlayerIDsDemoL #-}



-- * Error

-- | 'errorError' Lens
errorErrorL :: Lens_' Error (Maybe Text)
errorErrorL f Error{..} = (\errorError -> Error { errorError, ..} ) <$> f errorError
{-# INLINE errorErrorL #-}

-- | 'errorErrorMessage' Lens
errorErrorMessageL :: Lens_' Error (Maybe Text)
errorErrorMessageL f Error{..} = (\errorErrorMessage -> Error { errorErrorMessage, ..} ) <$> f errorErrorMessage
{-# INLINE errorErrorMessageL #-}



-- * InlineObject

-- | 'inlineObjectModel' Lens
inlineObjectModelL :: Lens_' InlineObject (Maybe SkinModel)
inlineObjectModelL f InlineObject{..} = (\inlineObjectModel -> InlineObject { inlineObjectModel, ..} ) <$> f inlineObjectModel
{-# INLINE inlineObjectModelL #-}

-- | 'inlineObjectFile' Lens
inlineObjectFileL :: Lens_' InlineObject (FilePath)
inlineObjectFileL f InlineObject{..} = (\inlineObjectFile -> InlineObject { inlineObjectFile, ..} ) <$> f inlineObjectFile
{-# INLINE inlineObjectFileL #-}



-- * InlineObject1

-- | 'inlineObject1Model' Lens
inlineObject1ModelL :: Lens_' InlineObject1 (Maybe SkinModel)
inlineObject1ModelL f InlineObject1{..} = (\inlineObject1Model -> InlineObject1 { inlineObject1Model, ..} ) <$> f inlineObject1Model
{-# INLINE inlineObject1ModelL #-}

-- | 'inlineObject1Url' Lens
inlineObject1UrlL :: Lens_' InlineObject1 (Text)
inlineObject1UrlL f InlineObject1{..} = (\inlineObject1Url -> InlineObject1 { inlineObject1Url, ..} ) <$> f inlineObject1Url
{-# INLINE inlineObject1UrlL #-}



-- * NameChange

-- | 'nameChangeName' Lens
nameChangeNameL :: Lens_' NameChange (Text)
nameChangeNameL f NameChange{..} = (\nameChangeName -> NameChange { nameChangeName, ..} ) <$> f nameChangeName
{-# INLINE nameChangeNameL #-}

-- | 'nameChangeChangedToAt' Lens
nameChangeChangedToAtL :: Lens_' NameChange (Maybe Integer)
nameChangeChangedToAtL f NameChange{..} = (\nameChangeChangedToAt -> NameChange { nameChangeChangedToAt, ..} ) <$> f nameChangeChangedToAt
{-# INLINE nameChangeChangedToAtL #-}



-- * OrderStatistic



-- * OrderStatisticsRequest

-- | 'orderStatisticsRequestMetricKeys' Lens
orderStatisticsRequestMetricKeysL :: Lens_' OrderStatisticsRequest ([OrderStatistic])
orderStatisticsRequestMetricKeysL f OrderStatisticsRequest{..} = (\orderStatisticsRequestMetricKeys -> OrderStatisticsRequest { orderStatisticsRequestMetricKeys, ..} ) <$> f orderStatisticsRequestMetricKeys
{-# INLINE orderStatisticsRequestMetricKeysL #-}



-- * OrderStatisticsResponse

-- | 'orderStatisticsResponseTotal' Lens
orderStatisticsResponseTotalL :: Lens_' OrderStatisticsResponse (Integer)
orderStatisticsResponseTotalL f OrderStatisticsResponse{..} = (\orderStatisticsResponseTotal -> OrderStatisticsResponse { orderStatisticsResponseTotal, ..} ) <$> f orderStatisticsResponseTotal
{-# INLINE orderStatisticsResponseTotalL #-}

-- | 'orderStatisticsResponseLast24h' Lens
orderStatisticsResponseLast24hL :: Lens_' OrderStatisticsResponse (Integer)
orderStatisticsResponseLast24hL f OrderStatisticsResponse{..} = (\orderStatisticsResponseLast24h -> OrderStatisticsResponse { orderStatisticsResponseLast24h, ..} ) <$> f orderStatisticsResponseLast24h
{-# INLINE orderStatisticsResponseLast24hL #-}

-- | 'orderStatisticsResponseSaleVelocityPerSeconds' Lens
orderStatisticsResponseSaleVelocityPerSecondsL :: Lens_' OrderStatisticsResponse (Double)
orderStatisticsResponseSaleVelocityPerSecondsL f OrderStatisticsResponse{..} = (\orderStatisticsResponseSaleVelocityPerSeconds -> OrderStatisticsResponse { orderStatisticsResponseSaleVelocityPerSeconds, ..} ) <$> f orderStatisticsResponseSaleVelocityPerSeconds
{-# INLINE orderStatisticsResponseSaleVelocityPerSecondsL #-}



-- * SecurityAnswer

-- | 'securityAnswerId' Lens
securityAnswerIdL :: Lens_' SecurityAnswer (Int)
securityAnswerIdL f SecurityAnswer{..} = (\securityAnswerId -> SecurityAnswer { securityAnswerId, ..} ) <$> f securityAnswerId
{-# INLINE securityAnswerIdL #-}



-- * SecurityAnswerId

-- | 'securityAnswerIdId' Lens
securityAnswerIdIdL :: Lens_' SecurityAnswerId (Int)
securityAnswerIdIdL f SecurityAnswerId{..} = (\securityAnswerIdId -> SecurityAnswerId { securityAnswerIdId, ..} ) <$> f securityAnswerIdId
{-# INLINE securityAnswerIdIdL #-}



-- * SecurityChallenge

-- | 'securityChallengeQuestion' Lens
securityChallengeQuestionL :: Lens_' SecurityChallenge (SecurityQuestion)
securityChallengeQuestionL f SecurityChallenge{..} = (\securityChallengeQuestion -> SecurityChallenge { securityChallengeQuestion, ..} ) <$> f securityChallengeQuestion
{-# INLINE securityChallengeQuestionL #-}

-- | 'securityChallengeAnswer' Lens
securityChallengeAnswerL :: Lens_' SecurityChallenge (SecurityAnswerId)
securityChallengeAnswerL f SecurityChallenge{..} = (\securityChallengeAnswer -> SecurityChallenge { securityChallengeAnswer, ..} ) <$> f securityChallengeAnswer
{-# INLINE securityChallengeAnswerL #-}



-- * SecurityQuestion

-- | 'securityQuestionId' Lens
securityQuestionIdL :: Lens_' SecurityQuestion (Int)
securityQuestionIdL f SecurityQuestion{..} = (\securityQuestionId -> SecurityQuestion { securityQuestionId, ..} ) <$> f securityQuestionId
{-# INLINE securityQuestionIdL #-}

-- | 'securityQuestionQuestion' Lens
securityQuestionQuestionL :: Lens_' SecurityQuestion (Text)
securityQuestionQuestionL f SecurityQuestion{..} = (\securityQuestionQuestion -> SecurityQuestion { securityQuestionQuestion, ..} ) <$> f securityQuestionQuestion
{-# INLINE securityQuestionQuestionL #-}



-- * SkinModel


