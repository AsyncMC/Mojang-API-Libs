{-
   Mojang API

   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI Version: 3.0.1
   Mojang API API version: 2020-06-05
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Mojang.API.SecurityQuestionAnswer
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Mojang.API.SecurityQuestionAnswer where

import Mojang.Core
import Mojang.MimeTypes
import Mojang.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** SecurityQuestionAnswer

-- *** checkSecurityStatus

-- | @GET \/user\/security\/location@
-- 
-- Check if security questions are needed
-- 
-- AuthMethod: 'AuthBasicPlayerAccessToken'
-- 
-- Note: Has 'Produces' instances, but no response schema
-- 
checkSecurityStatus 
  :: MojangRequest CheckSecurityStatus MimeNoContent res MimeJSON
checkSecurityStatus =
  _mkRequest "GET" ["/user/security/location"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicPlayerAccessToken)

data CheckSecurityStatus  

-- | @application/json@
instance Produces CheckSecurityStatus MimeJSON


-- *** listPendingSecurityQuestions

-- | @GET \/user\/security\/challenges@
-- 
-- Get list of questions
-- 
-- AuthMethod: 'AuthBasicPlayerAccessToken'
-- 
listPendingSecurityQuestions 
  :: MojangRequest ListPendingSecurityQuestions MimeNoContent [SecurityChallenge] MimeJSON
listPendingSecurityQuestions =
  _mkRequest "GET" ["/user/security/challenges"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicPlayerAccessToken)

data ListPendingSecurityQuestions  

-- | @application/json@
instance Produces ListPendingSecurityQuestions MimeJSON


-- *** sendSecurityQuestionAnswers

-- | @POST \/user\/security\/location@
-- 
-- Send back the answers
-- 
-- AuthMethod: 'AuthBasicPlayerAccessToken'
-- 
-- Note: Has 'Produces' instances, but no response schema
-- 
sendSecurityQuestionAnswers 
  :: (Consumes SendSecurityQuestionAnswers MimeJSON, MimeRender MimeJSON SecurityAnswer2)
  => SecurityAnswer2 -- ^ "securityAnswer" -  An array with all the answers
  -> MojangRequest SendSecurityQuestionAnswers MimeJSON res MimeJSON
sendSecurityQuestionAnswers securityAnswer =
  _mkRequest "POST" ["/user/security/location"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicPlayerAccessToken)
    `setBodyParam` securityAnswer

data SendSecurityQuestionAnswers 

-- | /Body Param/ "SecurityAnswer" - An array with all the answers
instance HasBodyParam SendSecurityQuestionAnswers SecurityAnswer2 

-- | @application/json@
instance Consumes SendSecurityQuestionAnswers MimeJSON

-- | @application/json@
instance Produces SendSecurityQuestionAnswers MimeJSON

