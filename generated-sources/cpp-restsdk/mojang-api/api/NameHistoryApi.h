/**
 * Mojang API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.3.4.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * NameHistoryApi.h
 *
 * 
 */

#ifndef COM_GITHUB_ASYNCMC_MOJANG_API_CPP_RESTSDK_API_NameHistoryApi_H_
#define COM_GITHUB_ASYNCMC_MOJANG_API_CPP_RESTSDK_API_NameHistoryApi_H_


#include "../ApiClient.h"

#include "CurrentPlayerIDs.h"
#include "Error.h"
#include "NameChange.h"
#include <vector>
#include <cpprest/details/basic_types.h>


#include <boost/optional.hpp>

namespace com {
namespace github {
namespace asyncmc {
namespace mojang {
namespace api {
namespace cpp {
namespace restsdk {
namespace api {

using namespace com::github::asyncmc::mojang::api::cpp::restsdk::model;



class  NameHistoryApi 
{
public:

    explicit NameHistoryApi( std::shared_ptr<ApiClient> apiClient );

    virtual ~NameHistoryApi();

    /// <summary>
    /// Find the current UUID of multiple players at once
    /// </summary>
    /// <remarks>
    /// Find the current players name, UUID, demo status and migration flag by the current players name. The \&quot;at\&quot; parameter is not supported. Players not found are not returned. If no players are found, an empty array is returned.
    /// </remarks>
    /// <param name="utilityStringT">Array with the player names</param>
    pplx::task<std::vector<std::shared_ptr<CurrentPlayerIDs>>> findUniqueIdsByName(
        std::vector<utility::string_t> utilityStringT
    );
    /// <summary>
    /// Gets the full player&#39;s name history
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="strippedUuid">The player UUID without hyphens</param>
    pplx::task<std::vector<std::shared_ptr<NameChange>>> getNameHistory(
        utility::string_t strippedUuid
    );
    /// <summary>
    /// Find the UUID by name
    /// </summary>
    /// <remarks>
    /// Find the current player name, UUID, demo status and migration flag by the current player name or at a given time.
    /// </remarks>
    /// <param name="username">The username in a given time, or in present if \&quot;at\&quot; is not sent</param>
    /// <param name="at">Find the username in a given time, when 0 selects the original name however, it only works if the name was changed at least once, or if the account is legacy. The time is an UNIX timestamp (without milliseconds) (optional, default to 0L)</param>
    pplx::task<std::shared_ptr<CurrentPlayerIDs>> getUniqueIdByName(
        utility::string_t username,
        boost::optional<int64_t> at
    );

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}
}
}
}
}

#endif /* COM_GITHUB_ASYNCMC_MOJANG_API_CPP_RESTSDK_API_NameHistoryApi_H_ */

