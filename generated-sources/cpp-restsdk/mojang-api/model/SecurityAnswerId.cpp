/**
 * Mojang API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.3.4.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "SecurityAnswerId.h"

namespace com {
namespace github {
namespace asyncmc {
namespace mojang {
namespace api {
namespace cpp {
namespace restsdk {
namespace model {

SecurityAnswerId::SecurityAnswerId()
{
    m_Id = 0;
}

SecurityAnswerId::~SecurityAnswerId()
{
}

void SecurityAnswerId::validate()
{
    // TODO: implement validation
}

web::json::value SecurityAnswerId::toJson() const
{
    web::json::value val = web::json::value::object();

    val[utility::conversions::to_string_t("id")] = ModelBase::toJson(m_Id);

    return val;
}

void SecurityAnswerId::fromJson(const web::json::value& val)
{
    setId(ModelBase::int32_tFromJson(val.at(utility::conversions::to_string_t("id"))));
}

void SecurityAnswerId::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t("id"), m_Id));
}

void SecurityAnswerId::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    setId(ModelBase::int32_tFromHttpContent(multipart->getContent(utility::conversions::to_string_t("id"))));
}

int32_t SecurityAnswerId::getId() const
{
    return m_Id;
}

void SecurityAnswerId::setId(int32_t value)
{
    m_Id = value;
    
}

}
}
}
}
}
}
}
}

