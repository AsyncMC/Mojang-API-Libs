/**
 * Mojang Session API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.3.4.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "PlayerSkinURL.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

PlayerSkinURL::PlayerSkinURL()
{
}

PlayerSkinURL::~PlayerSkinURL()
{
}

void PlayerSkinURL::validate()
{
    // TODO: implement validation
}

web::json::value PlayerSkinURL::toJson() const
{
    web::json::value val = this->PlayerTextureURL::toJson();


    return val;
}

void PlayerSkinURL::fromJson(const web::json::value& val)
{
    this->PlayerTextureURL::fromJson(val);

}

void PlayerSkinURL::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t("url"), m_Url));
}

void PlayerSkinURL::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    setUrl(ModelBase::stringFromHttpContent(multipart->getContent(utility::conversions::to_string_t("url"))));
}

}
}
}
}

