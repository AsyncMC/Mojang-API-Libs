/**
 * Mojang API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef ModelFactory_H_
#define ModelFactory_H_

#include "OAIObject.h"

#include "OAICurrentPlayerIDs.h"
#include "OAIError.h"
#include "OAIInline_object.h"
#include "OAIInline_object_1.h"
#include "OAINameChange.h"
#include "OAIOrderStatistic.h"
#include "OAIOrderStatisticsRequest.h"
#include "OAIOrderStatisticsResponse.h"
#include "OAISecurityAnswer.h"
#include "OAISecurityAnswerId.h"
#include "OAISecurityChallenge.h"
#include "OAISecurityQuestion.h"
#include "OAISkinModel.h"

namespace OpenAPI {

  inline void* create(QString type) {
    if(QString("OAICurrentPlayerIDs").compare(type) == 0) {
      return new OAICurrentPlayerIDs();
    }
    if(QString("OAIError").compare(type) == 0) {
      return new OAIError();
    }
    if(QString("OAIInline_object").compare(type) == 0) {
      return new OAIInline_object();
    }
    if(QString("OAIInline_object_1").compare(type) == 0) {
      return new OAIInline_object_1();
    }
    if(QString("OAINameChange").compare(type) == 0) {
      return new OAINameChange();
    }
    if(QString("OAIOrderStatistic").compare(type) == 0) {
      return new OAIOrderStatistic();
    }
    if(QString("OAIOrderStatisticsRequest").compare(type) == 0) {
      return new OAIOrderStatisticsRequest();
    }
    if(QString("OAIOrderStatisticsResponse").compare(type) == 0) {
      return new OAIOrderStatisticsResponse();
    }
    if(QString("OAISecurityAnswer").compare(type) == 0) {
      return new OAISecurityAnswer();
    }
    if(QString("OAISecurityAnswerId").compare(type) == 0) {
      return new OAISecurityAnswerId();
    }
    if(QString("OAISecurityChallenge").compare(type) == 0) {
      return new OAISecurityChallenge();
    }
    if(QString("OAISecurityQuestion").compare(type) == 0) {
      return new OAISecurityQuestion();
    }
    if(QString("OAISkinModel").compare(type) == 0) {
      return new OAISkinModel();
    }
    
    return nullptr;
  }

  inline void* create(QString json, QString type) {
    if(type.startsWith("QString")) {
      return new QString();
    }    
    auto val = static_cast<OAIObject*>(create(type));
    if(val != nullptr) {
      return val->fromJson(json);
    }
    return nullptr;
  }

}

#endif /* ModelFactory_H_ */
