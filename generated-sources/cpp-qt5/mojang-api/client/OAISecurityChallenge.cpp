/**
 * Mojang API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAISecurityChallenge.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAISecurityChallenge::OAISecurityChallenge(QString json) {
    init();
    this->fromJson(json);
}

OAISecurityChallenge::OAISecurityChallenge() {
    init();
}

OAISecurityChallenge::~OAISecurityChallenge() {
    this->cleanup();
}

void
OAISecurityChallenge::init() {
    question = new OAISecurityQuestion();
    m_question_isSet = false;
    answer = new OAISecurityAnswerId();
    m_answer_isSet = false;
}

void
OAISecurityChallenge::cleanup() {
    if(question != nullptr) { 
        delete question;
    }
    if(answer != nullptr) { 
        delete answer;
    }
}

OAISecurityChallenge*
OAISecurityChallenge::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAISecurityChallenge::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&question, pJson["question"], "OAISecurityQuestion", "OAISecurityQuestion");
    
    ::OpenAPI::setValue(&answer, pJson["answer"], "OAISecurityAnswerId", "OAISecurityAnswerId");
    
}

QString
OAISecurityChallenge::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAISecurityChallenge::asJsonObject() {
    QJsonObject obj;
    if((question != nullptr) && (question->isSet())){
        toJsonValue(QString("question"), question, obj, QString("OAISecurityQuestion"));
    }
    if((answer != nullptr) && (answer->isSet())){
        toJsonValue(QString("answer"), answer, obj, QString("OAISecurityAnswerId"));
    }

    return obj;
}

OAISecurityQuestion*
OAISecurityChallenge::getQuestion() {
    return question;
}
void
OAISecurityChallenge::setQuestion(OAISecurityQuestion* question) {
    this->question = question;
    this->m_question_isSet = true;
}

OAISecurityAnswerId*
OAISecurityChallenge::getAnswer() {
    return answer;
}
void
OAISecurityChallenge::setAnswer(OAISecurityAnswerId* answer) {
    this->answer = answer;
    this->m_answer_isSet = true;
}


bool
OAISecurityChallenge::isSet(){
    bool isObjectUpdated = false;
    do{
        if(question != nullptr && question->isSet()){ isObjectUpdated = true; break;}
        if(answer != nullptr && answer->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

