/**
 * Mojang Session API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIPlayerProfileProperty.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIPlayerProfileProperty::OAIPlayerProfileProperty(QString json) {
    init();
    this->fromJson(json);
}

OAIPlayerProfileProperty::OAIPlayerProfileProperty() {
    init();
}

OAIPlayerProfileProperty::~OAIPlayerProfileProperty() {
    this->cleanup();
}

void
OAIPlayerProfileProperty::init() {
    name = new QString("");
    m_name_isSet = false;
    value = new QString("");
    m_value_isSet = false;
    signature = new QString("");
    m_signature_isSet = false;
}

void
OAIPlayerProfileProperty::cleanup() {
    if(name != nullptr) { 
        delete name;
    }
    if(value != nullptr) { 
        delete value;
    }
    if(signature != nullptr) { 
        delete signature;
    }
}

OAIPlayerProfileProperty*
OAIPlayerProfileProperty::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIPlayerProfileProperty::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&name, pJson["name"], "QString", "QString");
    
    ::OpenAPI::setValue(&value, pJson["value"], "QByteArray", "QByteArray");
    
    ::OpenAPI::setValue(&signature, pJson["signature"], "QByteArray", "QByteArray");
    
}

QString
OAIPlayerProfileProperty::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIPlayerProfileProperty::asJsonObject() {
    QJsonObject obj;
    if(name != nullptr && *name != QString("")){
        toJsonValue(QString("name"), name, obj, QString("QString"));
    }
    if(value != nullptr) { 
        obj.insert("value", QJsonValue(*value));
    }
    if(signature != nullptr) { 
        obj.insert("signature", QJsonValue(*signature));
    }

    return obj;
}

QString*
OAIPlayerProfileProperty::getName() {
    return name;
}
void
OAIPlayerProfileProperty::setName(QString* name) {
    this->name = name;
    this->m_name_isSet = true;
}

QByteArray*
OAIPlayerProfileProperty::getValue() {
    return value;
}
void
OAIPlayerProfileProperty::setValue(QByteArray* value) {
    this->value = value;
    this->m_value_isSet = true;
}

QByteArray*
OAIPlayerProfileProperty::getSignature() {
    return signature;
}
void
OAIPlayerProfileProperty::setSignature(QByteArray* signature) {
    this->signature = signature;
    this->m_signature_isSet = true;
}


bool
OAIPlayerProfileProperty::isSet(){
    bool isObjectUpdated = false;
    do{
        if(name != nullptr && *name != QString("")){ isObjectUpdated = true; break;}
        if(value != nullptr && value->isSet()){ isObjectUpdated = true; break;}
        if(signature != nullptr && signature->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

