/**
 * Mojang Session API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIPlayerProfileTexturePropertyValue.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIPlayerProfileTexturePropertyValue::OAIPlayerProfileTexturePropertyValue(QString json) {
    init();
    this->fromJson(json);
}

OAIPlayerProfileTexturePropertyValue::OAIPlayerProfileTexturePropertyValue() {
    init();
}

OAIPlayerProfileTexturePropertyValue::~OAIPlayerProfileTexturePropertyValue() {
    this->cleanup();
}

void
OAIPlayerProfileTexturePropertyValue::init() {
    timestamp = 0L;
    m_timestamp_isSet = false;
    profile_id = new QString("");
    m_profile_id_isSet = false;
    profile_name = new QString("");
    m_profile_name_isSet = false;
    signature_required = false;
    m_signature_required_isSet = false;
    textures = new OAIPlayerTexture();
    m_textures_isSet = false;
}

void
OAIPlayerProfileTexturePropertyValue::cleanup() {

    if(profile_id != nullptr) { 
        delete profile_id;
    }
    if(profile_name != nullptr) { 
        delete profile_name;
    }

    if(textures != nullptr) { 
        delete textures;
    }
}

OAIPlayerProfileTexturePropertyValue*
OAIPlayerProfileTexturePropertyValue::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIPlayerProfileTexturePropertyValue::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&timestamp, pJson["timestamp"], "qint64", "");
    
    ::OpenAPI::setValue(&profile_id, pJson["profileId"], "QString", "QString");
    
    ::OpenAPI::setValue(&profile_name, pJson["profileName"], "QString", "QString");
    
    ::OpenAPI::setValue(&signature_required, pJson["signatureRequired"], "bool", "");
    
    ::OpenAPI::setValue(&textures, pJson["textures"], "OAIPlayerTexture", "OAIPlayerTexture");
    
}

QString
OAIPlayerProfileTexturePropertyValue::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIPlayerProfileTexturePropertyValue::asJsonObject() {
    QJsonObject obj;
    if(m_timestamp_isSet){
        obj.insert("timestamp", QJsonValue(timestamp));
    }
    if(profile_id != nullptr && *profile_id != QString("")){
        toJsonValue(QString("profileId"), profile_id, obj, QString("QString"));
    }
    if(profile_name != nullptr && *profile_name != QString("")){
        toJsonValue(QString("profileName"), profile_name, obj, QString("QString"));
    }
    if(m_signature_required_isSet){
        obj.insert("signatureRequired", QJsonValue(signature_required));
    }
    if((textures != nullptr) && (textures->isSet())){
        toJsonValue(QString("textures"), textures, obj, QString("OAIPlayerTexture"));
    }

    return obj;
}

qint64
OAIPlayerProfileTexturePropertyValue::getTimestamp() {
    return timestamp;
}
void
OAIPlayerProfileTexturePropertyValue::setTimestamp(qint64 timestamp) {
    this->timestamp = timestamp;
    this->m_timestamp_isSet = true;
}

QString*
OAIPlayerProfileTexturePropertyValue::getProfileId() {
    return profile_id;
}
void
OAIPlayerProfileTexturePropertyValue::setProfileId(QString* profile_id) {
    this->profile_id = profile_id;
    this->m_profile_id_isSet = true;
}

QString*
OAIPlayerProfileTexturePropertyValue::getProfileName() {
    return profile_name;
}
void
OAIPlayerProfileTexturePropertyValue::setProfileName(QString* profile_name) {
    this->profile_name = profile_name;
    this->m_profile_name_isSet = true;
}

bool
OAIPlayerProfileTexturePropertyValue::isSignatureRequired() {
    return signature_required;
}
void
OAIPlayerProfileTexturePropertyValue::setSignatureRequired(bool signature_required) {
    this->signature_required = signature_required;
    this->m_signature_required_isSet = true;
}

OAIPlayerTexture*
OAIPlayerProfileTexturePropertyValue::getTextures() {
    return textures;
}
void
OAIPlayerProfileTexturePropertyValue::setTextures(OAIPlayerTexture* textures) {
    this->textures = textures;
    this->m_textures_isSet = true;
}


bool
OAIPlayerProfileTexturePropertyValue::isSet(){
    bool isObjectUpdated = false;
    do{
        if(m_timestamp_isSet){ isObjectUpdated = true; break;}
        if(profile_id != nullptr && *profile_id != QString("")){ isObjectUpdated = true; break;}
        if(profile_name != nullptr && *profile_name != QString("")){ isObjectUpdated = true; break;}
        if(m_signature_required_isSet){ isObjectUpdated = true; break;}
        if(textures != nullptr && textures->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

