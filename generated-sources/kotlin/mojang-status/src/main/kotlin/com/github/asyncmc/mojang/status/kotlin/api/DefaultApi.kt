/**
* Mojang API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* OpenAPI spec version: 2020-06-05
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.github.asyncmc.mojang.status.kotlin.api

import com.github.asyncmc.mojang.status.kotlin.model.ApiStatus

import org.openapitools.client.infrastructure.*

class DefaultApi(basePath: kotlin.String = "https://status.mojang.com") : ApiClient(basePath) {

    /**
    * Checks the Mojang service statuses
    * 
    * @return kotlin.Array<kotlin.collections.Map<kotlin.String, ApiStatus>>
    */
    @Suppress("UNCHECKED_CAST")
    fun checkStatuses() : kotlin.Array<kotlin.collections.Map<kotlin.String, ApiStatus>> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: MultiValueMap = mapOf()
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/check",
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<kotlin.collections.Map<kotlin.String, ApiStatus>>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<kotlin.collections.Map<kotlin.String, ApiStatus>>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

}
