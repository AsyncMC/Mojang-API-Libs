//
// DefaultAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Alamofire



public class DefaultAPI: APIBase {
    /**

     - parameter authenticationRequest: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func authenticate(authenticationRequest authenticationRequest: AuthenticationRequest, completion: ((data: Authentication?, error: ErrorType?) -> Void)) {
        authenticateWithRequestBuilder(authenticationRequest: authenticationRequest).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /authenticate     - examples: [{contentType=application/json, example={
  "availableProfiles" : [ {
    "createdAt" : 0,
    "legacyProfile" : true,
    "agent" : "agent",
    "legacy" : true,
    "name" : "name",
    "paid" : true,
    "id" : "id",
    "migrated" : true,
    "userId" : "userId",
    "suspended" : true
  }, {
    "createdAt" : 0,
    "legacyProfile" : true,
    "agent" : "agent",
    "legacy" : true,
    "name" : "name",
    "paid" : true,
    "id" : "id",
    "migrated" : true,
    "userId" : "userId",
    "suspended" : true
  } ],
  "selectedProfile" : {
    "createdAt" : 0,
    "legacyProfile" : true,
    "agent" : "agent",
    "legacy" : true,
    "name" : "name",
    "paid" : true,
    "id" : "id",
    "migrated" : true,
    "userId" : "userId",
    "suspended" : true
  },
  "user" : {
    "registerIp" : "registerIp",
    "verifiedByParent" : true,
    "migratedAt" : 6,
    "passwordChangedAt" : 5,
    "legacyUser" : true,
    "registeredAt" : 1,
    "dateOfBirth" : 5,
    "suspended" : true,
    "emailVerified" : true,
    "migratedFrom" : "migratedFrom",
    "blocked" : true,
    "migrated" : true,
    "secured" : true,
    "email" : "email",
    "username" : "username"
  }
}, statusCode=200}]
     - parameter authenticationRequest: (body)  

     - returns: RequestBuilder<Authentication> 
     */
    public class func authenticateWithRequestBuilder(authenticationRequest authenticationRequest: AuthenticationRequest) -> RequestBuilder<Authentication> {
        let path = "/authenticate"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = authenticationRequest.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Authentication>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter accessKeys: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func invalidate(accessKeys accessKeys: AccessKeys, completion: ((error: ErrorType?) -> Void)) {
        invalidateWithRequestBuilder(accessKeys: accessKeys).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     - POST /invalidate     - parameter accessKeys: (body)  

     - returns: RequestBuilder<Void> 
     */
    public class func invalidateWithRequestBuilder(accessKeys accessKeys: AccessKeys) -> RequestBuilder<Void> {
        let path = "/invalidate"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = accessKeys.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter refreshRequest: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func refresh(refreshRequest refreshRequest: RefreshRequest, completion: ((data: RefreshResponse?, error: ErrorType?) -> Void)) {
        refreshWithRequestBuilder(refreshRequest: refreshRequest).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /refresh     - examples: [{contentType=application/json, example={
  "selectedProfile" : {
    "name" : "name",
    "id" : "id"
  },
  "user" : {
    "id" : "id",
    "properties" : [ {
      "name" : "name",
      "value" : "value"
    }, {
      "name" : "name",
      "value" : "value"
    } ]
  }
}, statusCode=200}]
     - parameter refreshRequest: (body)  

     - returns: RequestBuilder<RefreshResponse> 
     */
    public class func refreshWithRequestBuilder(refreshRequest refreshRequest: RefreshRequest) -> RequestBuilder<RefreshResponse> {
        let path = "/refresh"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = refreshRequest.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<RefreshResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter usernamePassword: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func siginout(usernamePassword usernamePassword: UsernamePassword, completion: ((error: ErrorType?) -> Void)) {
        siginoutWithRequestBuilder(usernamePassword: usernamePassword).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     - POST /signout     - parameter usernamePassword: (body)  

     - returns: RequestBuilder<Void> 
     */
    public class func siginoutWithRequestBuilder(usernamePassword usernamePassword: UsernamePassword) -> RequestBuilder<Void> {
        let path = "/signout"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = usernamePassword.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter accessKeys: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func validate(accessKeys accessKeys: AccessKeys, completion: ((error: ErrorType?) -> Void)) {
        validateWithRequestBuilder(accessKeys: accessKeys).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     - POST /validate     - parameter accessKeys: (body)  

     - returns: RequestBuilder<Void> 
     */
    public class func validateWithRequestBuilder(accessKeys accessKeys: AccessKeys) -> RequestBuilder<Void> {
        let path = "/validate"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = accessKeys.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
