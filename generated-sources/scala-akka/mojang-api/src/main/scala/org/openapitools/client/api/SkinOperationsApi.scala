/**
 * Mojang API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.Error
import java.io.File
import org.openapitools.client.model.SkinModel
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object SkinOperationsApi {

  /**
   * This will set the skin for the selected profile, but Mojang's servers will fetch the skin from a URL. This will also work for legacy accounts.
   * 
   * Expected answers:
   *   code 204 :  (The skin has been changed. The response has no body)
   *   code 400 : Error (Upon error the server will send back a JSON with the error. (Success is a blank payload))
   * 
   * Available security schemes:
   *   PlayerAccessToken (http)
   * 
   * @param strippedUuid The player UUID without hyphens
   * @param url The URL which Mojang servers will download and apply the skin
   * @param model 
   */
  def changePlayerSkin(strippedUuid: String, url: String, model: Option[SkinModel] = None)(implicit basicAuth: BasicCredentials): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "https://api.mojang.com", "/user/profile/{stripped_uuid}/skin", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("model", model)
      .withFormParam("url", url)
      .withPathParam("stripped_uuid", strippedUuid)
      .withSuccessResponse[Unit](204)
      .withErrorResponse[Error](400)
        /**
   * Expected answers:
   *   code 204 :  (The skin has been changed. The response has no body)
   *   code 400 : Error (Upon error the server will send back a JSON with the error. (Success is a blank payload))
   * 
   * Available security schemes:
   *   PlayerAccessToken (http)
   * 
   * @param strippedUuid The player UUID without hyphens
   */
  def resetPlayerSkin(strippedUuid: String)(implicit basicAuth: BasicCredentials): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.DELETE, "https://api.mojang.com", "/user/profile/{stripped_uuid}/skin", "application/json")
      .withCredentials(basicAuth)
      .withPathParam("stripped_uuid", strippedUuid)
      .withSuccessResponse[Unit](204)
      .withErrorResponse[Error](400)
        /**
   * This uploads a skin to Mojang's servers. It also sets the users skin. This works on legacy counts as well.
   * 
   * Expected answers:
   *   code 204 :  (The skin has been changed. The response has no body)
   *   code 400 : Error (Upon error the server will send back a JSON with the error. (Success is a blank payload))
   * 
   * Available security schemes:
   *   PlayerAccessToken (http)
   * 
   * @param strippedUuid The player UUID without hyphens
   * @param file The skin image in PNG format
   * @param model 
   */
  def uploadPlayerSkin(strippedUuid: String, file: File, model: Option[SkinModel] = None)(implicit basicAuth: BasicCredentials): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.PUT, "https://api.mojang.com", "/user/profile/{stripped_uuid}/skin", "multipart/form-data")
      .withCredentials(basicAuth)
      .withFormParam("model", model)
      .withFormParam("file", file)
      .withPathParam("stripped_uuid", strippedUuid)
      .withSuccessResponse[Unit](204)
      .withErrorResponse[Error](400)
      

}

