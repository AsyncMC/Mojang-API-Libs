=begin comment

Mojang API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

OpenAPI spec version: 2020-06-05

Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# Do not edit the class manually.
# Ref: https://openapi-generator.tech
#
package WWW::OpenAPIClient::MiscellaneousApi;

require 5.6.0;
use strict;
use warnings;
use utf8; 
use Exporter;
use Carp qw( croak );
use Log::Any qw($log);

use WWW::OpenAPIClient::ApiClient;

use base "Class::Data::Inheritable";

__PACKAGE__->mk_classdata('method_documentation' => {});

sub new {
    my $class = shift;
    my $api_client;

    if ($_[0] && ref $_[0] && ref $_[0] eq 'WWW::OpenAPIClient::ApiClient' ) {
        $api_client = $_[0];
    } else {
        $api_client = WWW::OpenAPIClient::ApiClient->new(@_);
    }

    bless { api_client => $api_client }, $class;

}


#
# get_orders_statistics
#
# Get statistics on the sales of Minecraft.
# 
# @param OrderStatisticsRequest $order_statistics_request The payload is a json list of options under the metricKeys key. You will receive a single object corresponding to the sum of sales of the requested type(s). You must request at least one type of sale. Below is the default list used by https://minecraft.net/en/stats/ (required)
{
    my $params = {
    'order_statistics_request' => {
        data_type => 'OrderStatisticsRequest',
        description => 'The payload is a json list of options under the metricKeys key. You will receive a single object corresponding to the sum of sales of the requested type(s). You must request at least one type of sale. Below is the default list used by https://minecraft.net/en/stats/',
        required => '1',
    },
    };
    __PACKAGE__->method_documentation->{ 'get_orders_statistics' } = { 
    	summary => 'Get statistics on the sales of Minecraft.',
        params => $params,
        returns => 'OrderStatisticsResponse',
        };
}
# @return OrderStatisticsResponse
#
sub get_orders_statistics {
    my ($self, %args) = @_;

    # verify the required parameter 'order_statistics_request' is set
    unless (exists $args{'order_statistics_request'}) {
      croak("Missing the required parameter 'order_statistics_request' when calling get_orders_statistics");
    }

    # parse inputs
    my $_resource_path = '/orders/statistics';

    my $_method = 'POST';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type('application/json');

    my $_body_data;
    # body params
    if ( exists $args{'order_statistics_request'}) {
        $_body_data = $args{'order_statistics_request'};
    }

    # authentication setting, if any
    my $auth_settings = [qw(MojangStatisticsToken )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('OrderStatisticsResponse', $response);
    return $_response_object;
}

1;
