/*
 * Mojang Session API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * A profile property, may be signed. The values are encoded by base64 and usually contains a json. The schema for the textures are described at PlayerProfileTexturePropertyValue
 */
public class OASPlayerProfileProperty {
    /**
     * The property name
     * @return name
     */
    public String name { get; set; }

    /**
     * The serialized property value in base64.
     * @return value
     */
    public Blob value { get; set; }

    /**
     * signed data using Yggdrasil\'s private key
     * @return signature
     */
    public Blob signature { get; set; }

    public static OASPlayerProfileProperty getExample() {
        OASPlayerProfileProperty playerProfileProperty = new OASPlayerProfileProperty();
          playerProfileProperty.name = 'textures';
          playerProfileProperty.value = EncodingUtil.base64Decode('VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZWQgb3ZlciB0aGUgbGF6eSBkb2cu');
          playerProfileProperty.signature = EncodingUtil.base64Decode('VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZWQgb3ZlciB0aGUgbGF6eSBkb2cu');
        return playerProfileProperty;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASPlayerProfileProperty) {           
            OASPlayerProfileProperty playerProfileProperty = (OASPlayerProfileProperty) obj;
            return this.name == playerProfileProperty.name
                && this.value == playerProfileProperty.value
                && this.signature == playerProfileProperty.signature;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (value == null ? 0 : System.hashCode(value));
        hashCode = (17 * hashCode) + (signature == null ? 0 : System.hashCode(signature));
        return hashCode;
    }
}

