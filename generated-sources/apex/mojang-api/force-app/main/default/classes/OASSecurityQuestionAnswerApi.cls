/*
 * Mojang API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

public class OASSecurityQuestionAnswerApi {
    OASClient client;

    public OASSecurityQuestionAnswerApi(OASClient client) {
        this.client = client;
    }

    public OASSecurityQuestionAnswerApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Check if security questions are needed
     * 
     * @throws OAS.ApiException if fails to make API call
     */
    public void checkSecurityStatus() {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/user/security/location', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'PlayerAccessToken' },
            null
        );
    }
    /**
     * Get list of questions
     * 
     * @return List<OASSecurityChallenge>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASSecurityChallenge> listPendingSecurityQuestions() {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASSecurityChallenge>) client.invoke(
            'GET', '/user/security/challenges', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'PlayerAccessToken' },
            List<OASSecurityChallenge>.class
        );
    }
    /**
     * Send back the answers
     * 
     * @param oaSSecurityAnswer An array with all the answers (required)
     * @throws OAS.ApiException if fails to make API call
     */
    public void sendSecurityQuestionAnswers(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSSecurityAnswer'), 'oaSSecurityAnswer');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'POST', '/user/security/location',
            (List<OASSecurityAnswer>) params.get('oaSSecurityAnswer'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'PlayerAccessToken' },
            null
        );
    }
}
