/*
 * Mojang Authentication API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2020-06-05
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

public class OASDefaultApi {
    OASClient client;

    public OASDefaultApi(OASClient client) {
        this.client = client;
    }

    public OASDefaultApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * 
     * 
     * @param oaSAuthenticationRequest  (required)
     * @return OASAuthentication
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAuthentication authenticate(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSAuthenticationRequest'), 'oaSAuthenticationRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAuthentication) client.invoke(
            'POST', '/authenticate',
            (OASAuthenticationRequest) params.get('oaSAuthenticationRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            OASAuthentication.class
        );
    }
    /**
     * 
     * 
     * @param oaSAccessKeys  (required)
     * @throws OAS.ApiException if fails to make API call
     */
    public void invalidate(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSAccessKeys'), 'oaSAccessKeys');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'POST', '/invalidate',
            (OASAccessKeys) params.get('oaSAccessKeys'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param oaSRefreshRequest  (required)
     * @return OASRefreshResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASRefreshResponse refresh(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSRefreshRequest'), 'oaSRefreshRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASRefreshResponse) client.invoke(
            'POST', '/refresh',
            (OASRefreshRequest) params.get('oaSRefreshRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            OASRefreshResponse.class
        );
    }
    /**
     * 
     * 
     * @param oaSUsernamePassword  (required)
     * @throws OAS.ApiException if fails to make API call
     */
    public void siginout(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSUsernamePassword'), 'oaSUsernamePassword');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'POST', '/signout',
            (OASUsernamePassword) params.get('oaSUsernamePassword'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param oaSAccessKeys  (required)
     * @throws OAS.ApiException if fails to make API call
     */
    public void validate(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSAccessKeys'), 'oaSAccessKeys');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'POST', '/validate',
            (OASAccessKeys) params.get('oaSAccessKeys'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            null
        );
    }
}
